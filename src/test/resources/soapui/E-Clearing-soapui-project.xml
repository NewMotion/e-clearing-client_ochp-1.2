<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="E-Clearing" resourceRoot="${projectDir}" soapui-version="5.0.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="eCHS-OCHP_1.2-live" type="wsdl" bindingName="{http://ochp.eu/1.2}eCHS-OCHP_1.2-live" soapVersion="1_1" anonymous="optional" definition="/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl"><con:part><con:url>file:/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="wsdl-viewer.xsl"?>
<!--===================================================================

                  OCHP 1.2 Web Service Description

This document defines a standard interface between different parties in 
the market of electric vehicle charging infrastructure and a clearing 
house that provides a common data routing and exchange platform for all 
these market shareholders.

Please note that the given documentation tags are not holding all
available information. For a full interface description please refer
to the OCHP specification PDF you can download from http://ochp.eu.

 
 Copyright Information:
This work is licensed under the Creative Commons 
Attribution-NoDerivatives 4.0 International License. 
To view a copy of this license, visit 
http://creativecommons.org/licenses/by-nd/4.0/.

====================================================================-->
<wsdl:definitions name="OCHP_1.2" targetNamespace="http://ochp.eu/1.2" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:p="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://ochp.eu/1.2">
  <wsdl:documentation>Open Clearing House Protocol (OCHP) Version 1.2</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ochp.eu/1.2">
      <s:complexType name="Result" abstract="false">
        <s:annotation>
          <s:documentation>General result</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="resultCode" type="tns:ResultCodeType">
            <s:annotation>
              <s:documentation>The machine-readable result code.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="1" maxOccurs="1" nillable="true" name="resultDescription">
            <s:annotation>
              <s:documentation>The human-readable error description</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="1000"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="AddCDRsRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="cdrInfoArray" type="tns:CDRInfo">
              <s:annotation>
                <s:documentation>This contains one or more Charge
									Detail Records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddCDRsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of AddCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="implausibleCdrsArray" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the refused Charge Detail Records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCDRsRequest">
        <s:complexType>
          <s:annotation>
            <s:documentation>Defines the GetCDRs.req.</s:documentation>
          </s:annotation>
        </s:complexType>
      </s:element>
      <s:element name="GetCDRsResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetCDRs request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="cdrInfoArray" type="tns:CDRInfo">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been sent towards the calling provider.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="RoamingAuthorisationInfo">
        <s:annotation>
          <s:documentation>Authorized card info.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="EmtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Electrical vehicle contract identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="contractId" type="tns:ContractId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>EMA-ID the token belongs to</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" maxOccurs="1" name="printedNumber">
            <s:annotation>
              <s:documentation>Might be used for manual authorisation</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="150"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element minOccurs="1" maxOccurs="1" name="expiryDate" type="tns:DateTimeType">
            <s:annotation>
              <s:documentation>Tokens may be used until the date of expiry is reached. To be handled by the partners systems. Expired roaming authorisations may be erased locally by each partner's system.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="GetRoamingAuthorisationListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetRoamingAuthorisationList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetRoamingAuthorisationListRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetRoamingAuthorisationListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetRoamingAuthorisationList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of SetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedRoamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListRequest">
        <s:complexType>
          <s:annotation>
            <s:documentation>Defines the GetChargePointList.req.</s:documentation>
          </s:annotation>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetChargePointList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="chargePointInfoArray" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetChargePointListRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="chargepointInfoArray" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetChargePointListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a SetChargePointList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of SetChargePointList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedChargePointInfo" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="CDRInfo">
        <s:annotation>
          <s:documentation>CDR info.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="CdrId" type="tns:CdrId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, Charge Data Record number. Unique per EVSE-ID.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Unique identifier for every EVSE following a common scheme with a major id-unit reflecting the country and the market partner issuing it.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="emtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Utilized token for this charging session.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="contractId" type="tns:ContractId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Identifies a customer in the electric mobility charging context.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="liveAuthId" type="tns:LiveAuthId" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>References a live authorisation request to the clearing house. Must be specified if the charging process was authorized by the clearing house directly in a call to RequestLiveRoamingAuthorisation.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:CdrStatusType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Current status of the CDR. Must be set to "new" by the issuing CMS. Shall not be changed by any partner but only by the CHS.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="startDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Start date and time of charge session
								(login with the RFID badge). Local time
								of the charge point is used.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDateTime" type="tns:LocalDateTimeType" maxOccurs="1" minOccurs="1">
            <s:annotation>
              <s:documentation>End date and time of the charge session (log-off with the RFID badge or physical disconnect). Must be set in the local time of the charge point.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="duration" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Duration of the charge session. Example "000:18:00"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="9"/>
                <s:pattern value="(\d\d\d):(\d\d):(\d\d)"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="houseNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Hose number at the location of the charge point. Alphanumeric, for example "10","255B"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="6"/>
                <s:pattern value="[A-Z0-9 ]{1,6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="address" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, for example "Av. Saint-Jean". Optionally also containing the house number if not in field houseNumber</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="zipCode" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, Examples: "60439", "8011 PK". Without the leading country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="10"/>
                <s:pattern value="[A-Z0-9\- ]{1,10}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="city" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic, in the language defined in locationNameLang</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="country" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. ISO 3166 country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="3"/>
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="chargePointType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The type of the charge point "AC" or "DC"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="AC"/>
                <s:enumeration value="DC"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="connectorType" type="tns:ConnectorType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Type of utilized socket or connector</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="maxSocketPower" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Maximum available power at the socket in kilowatts. Example: "3.7", "11", "22"</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="productType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Identifies the type of the product that was delivered for the charging session. Custom product code.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="2"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="meterId" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Written identification number of the physical energy meter, provided by the manufacturer. For future use.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="20"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="chargingPeriods" type="tns:CdrPeriodType" minOccurs="1" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>One period per item on the bill. At the moment only one period is to be provided</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="DateTimeType">
        <s:sequence>
          <s:element name="DateTime">
            <s:annotation>
              <s:documentation>Format is according to ISO8601 UTC. The field takes 20 alphanumeric characters</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="20"/>
                <s:pattern value="(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)Z"/>
                <s:whiteSpace value="collapse"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="EmtId">
        <s:sequence>
          <s:element name="instance" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The authorization tokens are defined according to the specification of the EMT-ID (Token ID). Each token consists of an token instance which holds the payload and at least the token type. The sub-type is for further specification of the general token type.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="512"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="tokenType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The type of the supplied instance for basic filtering.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="rfid"/>
                <s:enumeration value="remote"/>
                <s:enumeration value="15118"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="tokenSubType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The exact type of the supplied instance for referencing purpose.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="mifareCls"/>
                <s:enumeration value="mifareDes"/>
                <s:enumeration value="calypso"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
        <s:attribute name="representation" default="sha-160">
          <s:annotation>
            <s:documentation>Specifies the representation of the token to allow hashed token values.
								plain:   The token instance is represented in plain text;
								sha-160: The token instance is represented in its 160bit SHA1 hash in 40 hexadecimal digits;
								sha-256: The token instance is represented in its 256bit SHA2 hash in 64 hexadecimal digits;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="plain"/>
              <s:enumeration value="sha-160"/>
              <s:enumeration value="sha-256"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
      </s:complexType>
      <s:element name="GetRoamingAuthorisationListUpdatesRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="lastUpdate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Date and time since the last successful call of GetRoamingAuthorisationList.req or GetRoamingAuthorisationListUpdate.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRoamingAuthorisationListUpdatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationListUpdate.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="roamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records changed since the time specified in lastUpdate in the request</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateRoamingAuthorisationListRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo" minOccurs="1" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records to be updated or added</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateRoamingAuthorisationListResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedRoamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConfirmCDRsRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="approved" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been approved by the EVSP</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="declined" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been declined by the EVSP.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConfirmCDRsResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of ConfirmCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListUpdatesRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="lastUpdate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Date and time since the last successful call of GetChargePointList.req of GetChargePointListUpdates.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRoamingAuthorisationListRequest">
        <s:complexType/>
      </s:element>
      <s:element name="GetChargePointListUpdatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>this contains the result of GetChargePointListUpdates.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="chargePointInfoArray" type="tns:ChargePointInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the charge point information records changed since the time specified in lastUpdate in the request</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateChargePointListRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="chargePointInfoArray" type="tns:ChargePointInfo" minOccurs="1" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the charge point information records to be updated or added</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateChargePointListResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateChargePointList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedChargePointInfo" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RequestLiveRoamingAuthorisationRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="emtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the ID of the token which is to be validated</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Unique identifier for every EVSE following a common scheme with a major id-unit reflecting the country and the market partner issuing it</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RequestLiveRoamingAuthorisationResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="roamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation record for the requested token, if the request was valid.</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="liveAuthId" type="tns:LiveAuthId" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>Unique ID of the live authorisation request to the clearing house. Must be used for the corresponding CDR to reference this request.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LocalDateTimeType">
        <s:annotation>
          <s:documentation>Format is according to ISO8601 UTC + Offset. The field takes 25 alphanumeric characters</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="LocalDateTime">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="25"/>
                <s:whiteSpace value="collapse"/>
                <s:pattern value="(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)([+\-]\d\d):(\d\d)"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="CdrStatusType">
        <s:sequence>
          <s:element name="CdrStatusType">
            <s:annotation>
              <s:documentation>new; A new CDR before upload to the CHS
								accepted; An uploaded CDR was accepted by the CHS as plausible
								rejected; The checked CDR again rejected by the CHS and is to be archived.
								owner declined; The CDR was declined by the owner (EVSP)
								approved; The CDR was approved by the owner(EVSP)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="new"/>
                <s:enumeration value="accepted"/>
                <s:enumeration value="rejected"/>
                <s:enumeration value="owner declined"/>
                <s:enumeration value="approved"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorType">
        <s:sequence>
          <s:element name="connectorStandard" minOccurs="1" maxOccurs="1" type="tns:ConnectorStandard">
            <s:annotation>
              <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="connectorFormat" minOccurs="1" maxOccurs="1" type="tns:ConnectorFormat">
            <s:annotation>
              <s:documentation>The format (socket/ cable) of the installed connector Socket The connector is a socket; the EV user needs to bring a fitting plug. Cable The connector is an attached cable; the EV user car needs to have a fitting inlet.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="CdrPeriodType">
        <s:sequence>
          <s:element name="startDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Starting time of period. Must be equal or later than startDateTime of the CDRInfo</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Ending time of the period. Must be equal or earlier than endDateTime of the CDRInfo</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="billingItem" type="tns:BillingItemType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Defines what the EVSP is charged for during this period</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="billingValue" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The value the EVSP is charged for. The unit of the value depends on the billingItem</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="currency" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic. The displayed and charged currency. Defined in ISO 4217 - Table A.1, alphabetic list.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:whiteSpace value="collapse"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="itemPrice" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Price per unit of the billingItem in the given currency.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="periodCost" type="s:float" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The cost of the period in the given currency.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="BillingItemType">
        <s:sequence>
          <s:element name="BillingItemType">
            <s:simpleType>
              <s:annotation>
                <s:documentation>parkingtime; Price for parking, The billingValue represents the time in hours 
									usagetime; Price for the time of EVSE usage. The billingValue represents the time in hours 
									energy; Price for the consumed energy. The billingValue represents the energy in kilowatt-hours. 
									power; Price for the consumed energy. The billingValue represents the maximum power in kilowatts 
									serviceFee; General service fee per charging process. The billingValue represents multiplier and thus has to be set to "1.0"</s:documentation>
              </s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="parkingtime"/>
                <s:enumeration value="usagetime"/>
                <s:enumeration value="energy"/>
                <s:enumeration value="power"/>
                <s:enumeration value="serviceFee"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="GeoPointType">
        <s:sequence>
          <s:element name="lat" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Latitude of the Point in decimal degree. Example: 50.104965 Decimal separator: "." Regex: -?[0-9]{1,2}\.[0-9]{6}</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="-?[0-9]{1,2}\.[0-9]{6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="lon" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Longitude of the decimal degree Example: -126.104965 Decimal separator: "." Regex: -?[0-9]{1,3}\.[0-9]{6}</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="-?[0-9]{1,3}\.[0-9]{6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorStandard">
        <s:sequence>
          <s:element name="ConnectorStandard">
            <s:annotation>
              <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:annotation>
                <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
              </s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="Chademo"/>
                <s:enumeration value="IEC-62196-T1"/>
                <s:enumeration value="IEC-62196-T1-COMBO"/>
                <s:enumeration value="IEC-62196-T2"/>
                <s:enumeration value="IEC-62196-T2-COMBO"/>
                <s:enumeration value="IEC-62196-T3A"/>
                <s:enumeration value="IEC-62196-T3C"/>
                <s:enumeration value="DOMESTIC-A"/>
                <s:enumeration value="DOMESTIC-B"/>
                <s:enumeration value="DOMESTIC-C"/>
                <s:enumeration value="DOMESTIC-D"/>
                <s:enumeration value="DOMESTIC-E"/>
                <s:enumeration value="DOMESTIC-F"/>
                <s:enumeration value="DOMESTIC-G"/>
                <s:enumeration value="DOMESTIC-H"/>
                <s:enumeration value="DOMESTIC-I"/>
                <s:enumeration value="DOMESTIC-J"/>
                <s:enumeration value="DOMESTIC-K"/>
                <s:enumeration value="DOMESTIC-L"/>
                <s:enumeration value="TESLA-R"/>
                <s:enumeration value="TESLA-S"/>
                <s:enumeration value="IEC-60309-2-single-16"/>
                <s:enumeration value="IEC-60309-2-three-16"/>
                <s:enumeration value="IEC-60309-2-three-32"/>
                <s:enumeration value="IEC-60309-2-three-64"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="HoursType">
        <s:sequence>
          <s:element name="regularHours" type="tns:RegularHoursType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Regular hours, weekday based. Should not be set for representing 24/7 as this is the most common case</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="exceptionalOpenings" type="tns:ExceptionalPeriodType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Exceptions for specific calendar dates, time-range based. Periods the station is operating/accessible. Additional to regular hours. May overlap regular rules.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="exceptionalClosings" type="tns:ExceptionalPeriodType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Exceptions for specific calendar dates, time-range based. Periods the station is not operating/accessible. Additional to regular hours. Overwriting regularHours and exceptionalOpenings. Should not overlap exceptionalOpenings.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointStatusType">
        <s:sequence>
          <s:element name="ChargePointStatusType">
            <s:annotation>
              <s:documentation>Unknown; No status information available
								Operative; Charge point is in operation and can be used
								Inoperative; charge point cannot be used due to maintenance, failure or other restrictions (temporarily) 
								Planned; planned charge point, will be operating soon 
								Closed; discontinued charge point, will be deleted soon</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Unknown"/>
                <s:enumeration value="Operative"/>
                <s:enumeration value="Inoperative"/>
                <s:enumeration value="Planned"/>
                <s:enumeration value="Closed"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointScheduleType">
        <s:sequence>
          <s:element name="startDate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of scheduled period.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDate" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of scheduled period, if known.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:ChargePointStatusType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Status value during the scheduled period.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ParkingRestrictionType">
        <s:sequence>
          <s:element name="ParkingRestrictionType">
            <s:annotation>
              <s:documentation>* evonly reserved parking spot for electric vehicles plugged parking allowed only while plugged in (charging)
								* disabled reserved parking spot for disabled people with valid ID
								* customers parking spot for costumer/guests only, for example in case of a hotel or shop
								* motorcycles parking spot only suitable for (electric) motorcycles or scooters</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:annotation></s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="evonly"/>
                <s:enumeration value="plugged"/>
                <s:enumeration value="disabled"/>
                <s:enumeration value="customers"/>
                <s:enumeration value="motorcycles"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="AuthMethodType">
        <s:annotation>
          <s:documentation>Public; Public accessible, no authorisation required 
						LocalKey; A key or token can be received at the location.(i.e. at the hotel reception or in the restaurant) 
						DirectCash; The EVSE can be accessed through direct payment in cash. DirectCreditcard; The Evse can be accessed through direct payment with credit card
						RfidMifareCls; Personal RFID token with roaming relation. (Mifare Classic) 
						RfidMifareDes; Personal token with roaming relation. (Mifare Desfire) 
						RfidCallypso; Personal RFID token with roaming relation. (Calypso) 
						Iec15118; In-car access token as specified in IEC-15118</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="AuthMethodType">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Public"/>
                <s:enumeration value="LocalKey"/>
                <s:enumeration value="DirectCash"/>
                <s:enumeration value="DirectCreditcard"/>
                <s:enumeration value="DirectDebitcard"/>
                <s:enumeration value="RfidMifareCls"/>
                <s:enumeration value="RfidMifareDes"/>
                <s:enumeration value="RfidCallypso"/>
                <s:enumeration value="Iec15118"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="RegularHoursType">
        <s:annotation>
          <s:documentation>Regular hours, weekday based. Number of day in the week, from Monday(1) till Sunday(7)</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="weekday" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Regular hours, weekday based. Number of day in the week, from Monday(1) till Sunday(7)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minInclusive value="1"/>
                <s:maxInclusive value="7"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="periodBegin" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of the regular period given in hours and minutes. Must be in 24h format with leading zeros. Example "18:15" Minute/Hour separator is ":"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="5"/>
                <s:pattern value="[0-2][0-9]\:[0-5][0-9]"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="periodEnd" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of the regular period, syntax as for periodBegin. Must be later than periodBegin.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[0-2][0-9]:[0-5][0-9]"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ExceptionalPeriodType">
        <s:sequence>
          <s:element name="periodBegin" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of exception</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="periodEnd" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of exception</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointInfo">
        <s:annotation>
          <s:documentation>List of available payment or access methods on site.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Globally unique identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="locationId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Identifies a location/pool of EVSEs. Unique within one EVSE Operator</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="15"/>
                <s:pattern value="[A-Z0-9 ]{1,15}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="timestamp" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Recommended. Date and time of the latest data update for this ChargePointInfo. When set it must be updated if one of the values changed.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="locationName" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Official name; should be unique in the geographical area</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="100"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="locationNameLang" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. ISO-639-3 language code defining the language of the location name</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="3"/>
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="images" minOccurs="0" maxOccurs="unbounded" type="tns:EvseImageUrlType"/>
          <s:element name="houseNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, for example "10", "255B".</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="6"/>
                <s:pattern value="[A-Z0-9 ]{1,6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="address" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric; for example "Av. Saint-Jean". Optionally also containing the house number if not in field houseNumber.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="city" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic, in the language defined in locationNameLang</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="zipCode" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, examples: "60439", "8011 PK". Without leading country code.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9 \-]{1,10}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="country" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. Iso 3166 country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="geoLocation" type="tns:GeoPointType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Geographical location of the charge point itself (power outlet).</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoUserInterface" type="tns:GeoPointType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Geographical location of the user interface for authorisation and payment means. If not specified the user interface is assumed to be at the location specified in geoLocation</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoSiteEntrance" type="tns:GeoPointType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>For larger sites entrances may be specified for navigation purpose.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoSiteExit" type="tns:GeoPointType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>For larger sites exits may be specified for navigation purpose. If only entrances are set, two-direction traffic is assumed.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="operatingTimes" type="tns:HoursType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The times the EVSE is operating and can be used for charging. Must nor be provided if operating hours are unsure/unknown</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="accessTimes" type="tns:HoursType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The times the EVSE is accessible, if different from operatingTimes. For example if a car park is closed during the night. Must not be provided if access hours are unsure/unknown</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:ChargePointStatusType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The current status of the charge point.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="statusSchedule" type="tns:ChargePointScheduleType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Planned status changes in the future. If a time span matches with the current or displayed date, the corresponding value overwrites "status"</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="telephoneNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Numeric. Service hotline for charging station to be displayed. to the EV user. Separators recommended.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[0-9 \-]{1,20}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="floorLevel" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Level on which the charge station is located (in garage buildings) in the locally displayed numbering scheme. Examples: "-2","P-5", "2", "+5"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9\-\+/]{1,4}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="parkingSlotNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Locally displayed parking slot number. Examples: "10", "251","B25", "P-234"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9\-\+/]{1,5}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="parkingRestriction" type="tns:ParkingRestrictionType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>This value, if provided, represents the restriction to the parking spot for different purposes.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="authMethods" type="tns:AuthMethodType" minOccurs="1" maxOccurs="unbounded"></s:element>
          <s:element name="connectors" type="tns:ConnectorType" minOccurs="1" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Which receptable type is/are present for a power outlet.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="userInterfaceLang" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Alpha, three characters. Language(s) of the user interface or printed on-site instructions. ISO-639-3 language code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z]{3}"/>
                <s:length value="3"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorFormat">
        <s:sequence>
          <s:element name="ConnectorFormat">
            <s:annotation>
              <s:documentation>The format (socket/ cable) of the installed connector.
									Socket; The connector is a socket; the EV user needs to bring a fitting plug 
									Cable; The connector is an attached cable; the EV user car needs to have a fitting inlet</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Socket"/>
                <s:enumeration value="Cable"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ResultCodeType">
        <s:sequence>
          <s:element name="resultCode">
            <s:annotation>
              <s:documentation>ok: Data accepted and processed; 
								server: Internal server error; 
								other: Other error type. See description for details;
								format: Data could not be processed due to formal error in SOAP message;
								missing: A mandatory value was missing;
								range: A given value was out of the allowed range;</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="ok"/>
                <s:enumeration value="server"/>
                <s:enumeration value="other"/>
                <s:enumeration value="format"/>
                <s:enumeration value="missing"/>
                <s:enumeration value="range"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:simpleType name="CdrId">
        <s:restriction base="s:string">
          <s:minLength value="1"/>
          <s:maxLength value="36"/>
          <s:pattern value="[0-9A-Z]{1,36}"/>
        </s:restriction>
      </s:simpleType>
      <s:complexType name="EvseImageUrlType">
        <s:sequence>
          <s:element name="uri" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>uri from where the image data can be fetched. Must begin with a protocol of the list: http, https, file, ftp</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="(http|https|ftp|file):\/\/.+"/>
                <s:maxLength value="255"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="thumbUri" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>uri from where a thumbnail of the image can be fetched. Must begin with a protocol of the list: http, https, file, ftp</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="(http|https|ftp|file):\/\/.+"/>
                <s:maxLength value="255"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="class" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Image class for usage categorization. Values: 
									networkLogo: logo of a associated roaming network to be displayed with the EVSE for example in lists, maps and detailed information view; 
									operatorLogo: logo of the charge points operator, for example a municipal, to be displayed with the EVSEs detailed information view or in lists and maps, if no networkLogo is present; 
									ownerLogo: logo of the charge points owner, for example a local store, to be displayed with the EVSEs detailed information view; 
									stationPhoto: full view photo of the station in field. Should show the station only;
									locationPhoto: location overview photo. Should indicate the location of the station on the site or street.;
									entrancePhoto: location entrance photo. Should show the car entrance to the location from street side; 
									otherPhoto: other related photo to be displayed with the stations detailed information view;
									otherLogo: other related logo to be displayed with the stations detailed information view; 
									otherGraphic: other related graphic to be displayed with the stations detailed information view;</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="networkLogo"/>
                <s:enumeration value="operatorLogo"/>
                <s:enumeration value="ownerLogo"/>
                <s:enumeration value="stationPhoto"/>
                <s:enumeration value="locationPhoto"/>
                <s:enumeration value="entrancePhoto"/>
                <s:enumeration value="otherPhoto"/>
                <s:enumeration value="otherLogo"/>
                <s:enumeration value="otherGraphic"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="type" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Image type like: gif, jpeg, png, svg</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="4"/>
                <s:minLength value="1"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="width" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Width of the full scale image</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minExclusive value="0"/>
                <s:maxInclusive value="99999"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="height" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Height of the full scale image</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minExclusive value="0"/>
                <s:maxInclusive value="99999"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="UpdateStatusRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="evse" minOccurs="0" maxOccurs="unbounded" type="tns:EvseStatusType">
              <s:annotation>
                <s:documentation>This contains one EVSE id with the current status represented in a major part and a minor part.</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="ttl" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>The time to live is set as the deadline till the status values are to be considered valid, where not otherwise specified.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateStatus.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetStatusRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="startDateTime" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>If this value is set to a point in the past, the response is limited to status
information that is more actual than the given value.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="evse" type="tns:EvseStatusType" minOccurs="0" maxOccurs="unbounded"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="EvseStatusType">
        <s:sequence>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1"/>
        </s:sequence>
        <s:attribute name="major" use="required">
          <s:annotation>
            <s:documentation>The major status type reflects the overall status of the EVSE. Values:
								available: the EVSE is able to start a new charging process;
								not-available: at the moment no new charging process may be started;
								unknown: the current status of the EVSE is not known;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="available"/>
              <s:enumeration value="not-available"/>
              <s:enumeration value="unknown"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
        <s:attribute name="minor" use="optional">
          <s:annotation>
            <s:documentation>The optional minor status type reflects the detailed status of the EVSE in addition to the major status. For each minor status value a proposed ttl value is given. However, the ttl should only be set to a value other than default if the expected status change is known or can be predicted. Values:
								available: the EVSE is able to start a new charging process;
								reserved: the EVSE is able to start a new charging process for limited duration as a future reservation is present. ttl to be set on the start of the reservation;
								charging: the EVSE is in use. ttl to be set on the expected end of the charging process;
								blocked: the EVSE not accessible because of a physical barrier, i.e. a car;
								outoforder: the EVSE is currently out of order. ttl to be set to the expected re-enabling;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="available"/>
              <s:enumeration value="reserved"/>
              <s:enumeration value="charging"/>
              <s:enumeration value="blocked"/>
              <s:enumeration value="outoforder"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
        <s:attribute name="ttl" type="s:dateTime" use="optional">
          <s:annotation>
            <s:documentation>The time to live is set as the deadline till the status value is to be considered valid.  Should be set to the expected status change.</s:documentation>
          </s:annotation>
        </s:attribute>
      </s:complexType>
      <s:simpleType name="EvseId">
        <s:annotation>
          <s:documentation>The EVSE-ID is uniquely referencing one charge point.</s:documentation>
        </s:annotation>
        <s:restriction base="s:string">
          <s:pattern value="[A-Za-z]{2}\*[A-Za-z0-9]{3}\*[Ee][A-Za-z0-9][A-Za-z0-9\*]{0,30}"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[Ee][A-Za-z0-9][A-Za-z0-9\*]{0,30}"/>
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="ContractId">
        <s:annotation>
          <s:documentation>The Contract-ID or EVCO-ID is uniquely referencing one customer account of a service provider.</s:documentation>
        </s:annotation>
        <s:restriction base="s:string">
          <s:pattern value="[A-Za-z]{2}-[A-Za-z0-9]{3}-[A-Za-z0-9]{9}-[A-Za-z0-9]"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[A-Za-z0-9]{9}[A-Za-z0-9]"/>
          <s:pattern value="[A-Za-z]{2}-[A-Za-z0-9]{3}-[A-Za-z0-9]{9}"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[A-Za-z0-9]{9}"/>
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="LiveAuthId">
        <s:restriction base="s:string">
          <s:pattern value="[A-Z0-9\-]*"/>
          <s:minLength value="1"/>
          <s:maxLength value="15"/>
        </s:restriction>
      </s:simpleType>
    </s:schema>
  </wsdl:types>
  <!--===================================================================
                        Messages
====================================================================-->
  <!--Messages for the Exchange of Authorisation Data-->
  <wsdl:message name="GetRoamingAuthorisationListInput">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListOutput">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRoamingAuthorisationListInput">
    <wsdl:part name="parameters" element="tns:SetRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <wsdl:message name="SetRoamingAuthorisationListOutput">
    <wsdl:part name="parameters" element="tns:SetRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListUpdatesRequest">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListUpdatesRequest"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListUpdatesResponse">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListUpdatesResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateRoamingAuthorisationListResponse">
    <wsdl:part name="parameters" element="tns:UpdateRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateRoamingAuthorisationListRequest">
    <wsdl:part name="parameters" element="tns:UpdateRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <!--Messages for the Exchange of Charge Data-->
  <wsdl:message name="AddCDRsInput">
    <wsdl:part name="parameters" element="tns:AddCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="AddCDRsOutput">
    <wsdl:part name="parameters" element="tns:AddCDRsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCDRsInput">
    <wsdl:part name="parameters" element="tns:GetCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetCDRsOutput">
    <wsdl:part name="parameters" element="tns:GetCDRsResponse"/>
  </wsdl:message>
  <wsdl:message name="ConfirmCDRsRequest">
    <wsdl:part name="parameters" element="tns:ConfirmCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="ConfirmCDRsResponse">
    <wsdl:part name="parameters" element="tns:ConfirmCDRsResponse"/>
  </wsdl:message>
  <!--Messages for the Exchange of Charge Point Information-->
  <wsdl:message name="GetChargepointListInput">
    <wsdl:part name="parameters" element="tns:GetChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="GetChargepointListOutput">
    <wsdl:part name="parameters" element="tns:GetChargePointListResponse"/>
  </wsdl:message>
  <wsdl:message name="SetChargepointListInput">
    <wsdl:part name="parameters" element="tns:SetChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="SetChargepointListOutput">
    <wsdl:part name="parameters" element="tns:SetChargePointListResponse"/>
  </wsdl:message>
  <wsdl:message name="GetChargePointListUpdatesRequest">
    <wsdl:part name="parameters" element="tns:GetChargePointListUpdatesRequest"/>
  </wsdl:message>
  <wsdl:message name="GetChargePointListUpdatesResponse">
    <wsdl:part name="parameters" element="tns:GetChargePointListUpdatesResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateChargePointListRequest">
    <wsdl:part name="parameters" element="tns:UpdateChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateChargePointListResponse">
    <wsdl:part name="parameters" element="tns:UpdateChargePointListResponse"/>
  </wsdl:message>
  <!--Messages for live authorisation-->
  <wsdl:message name="RequestLiveRoamingAuthorisationRequest">
    <wsdl:part name="parameters" element="tns:RequestLiveRoamingAuthorisationRequest"/>
  </wsdl:message>
  <wsdl:message name="RequestLiveRoamingAuthorisationResponse">
    <wsdl:part name="parameters" element="tns:RequestLiveRoamingAuthorisationResponse"/>
  </wsdl:message>
  <!--Messages for the Live Status Interface-->
  <wsdl:message name="UpdateStatusRequest">
    <wsdl:part name="parameters" element="tns:UpdateStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateStatusResponse">
    <wsdl:part name="parameters" element="tns:UpdateStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetStatusRequest">
    <wsdl:part name="parameters" element="tns:GetStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetStatusResponse">
    <wsdl:part name="parameters" element="tns:GetStatusResponse"/>
  </wsdl:message>
  <!--===================================================================
                        Port Definitions
====================================================================-->
  <wsdl:portType name="OCHP_1.2">
    <wsdl:documentation>OCHP Version 1.2 Interface</wsdl:documentation>
    <wsdl:operation name="AddCDRs">
      <wsdl:documentation>Local roaming charge data records are sent from the CMS to the CHS.</wsdl:documentation>
      <wsdl:input message="tns:AddCDRsInput"/>
      <wsdl:output message="tns:AddCDRsOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetCDRs">
      <wsdl:documentation>Cleared roaming charge data records, held at the CHS are sent from the CHS to the MDM. Note that only cleared CDRs that concern the EVSP are sent.</wsdl:documentation>
      <wsdl:input message="tns:GetCDRsInput"/>
      <wsdl:output message="tns:GetCDRsOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationList">
      <wsdl:documentation>A CMS downloads the global authorisation data repository from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetRoamingAuthorisationListInput"/>
      <wsdl:output message="tns:GetRoamingAuthorisationListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="SetRoamingAuthorisationList">
      <wsdl:documentation>The MDM of each EVSP has to exchange the own authorisation data with the Clearing House to share that data with EVSE Operators.</wsdl:documentation>
      <wsdl:input message="tns:SetRoamingAuthorisationListInput"/>
      <wsdl:output message="tns:SetRoamingAuthorisationListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointList">
      <wsdl:documentation>A NPS downloads the global charge point information from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetChargepointListInput"/>
      <wsdl:output message="tns:GetChargepointListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="SetChargepointList">
      <wsdl:documentation>Local roaming charge data records are sent from the CMS to the CHS.</wsdl:documentation>
      <wsdl:input message="tns:SetChargepointListInput"/>
      <wsdl:output message="tns:SetChargepointListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationListUpdates">
      <wsdl:documentation>A CMS downloads the changes to the global authorisation data repository since the last synchronization from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetRoamingAuthorisationListUpdatesRequest"/>
      <wsdl:output message="tns:GetRoamingAuthorisationListUpdatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateRoamingAuthorisationList">
      <wsdl:documentation>For later updates of authorization data from the MDM to the Clearing House and the EVSE Operators, only the changed entries (delta) have to be transferred.</wsdl:documentation>
      <wsdl:input message="tns:UpdateRoamingAuthorisationListRequest"/>
      <wsdl:output message="tns:UpdateRoamingAuthorisationListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ConfirmCDRs">
      <wsdl:documentation>Cleared roaming charge data records, downloaded from the CHS are confirmed by the MDM. An EVSE-Operator has to confirm every downloaded CDR either with an accept or a revoke.</wsdl:documentation>
      <wsdl:input message="tns:ConfirmCDRsRequest"/>
      <wsdl:output message="tns:ConfirmCDRsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointListUpdates">
      <wsdl:documentation>A NPS downloads the changes to the global charge point information data repository since the last synchronization from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetChargePointListUpdatesRequest"/>
      <wsdl:output message="tns:GetChargePointListUpdatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateChargePointList">
      <wsdl:documentation>For later updates of charge point information from the CIMS to the Clearing House and the EVSPs, only the changed entries (delta) have to be transferred.</wsdl:documentation>
      <wsdl:input message="tns:UpdateChargePointListRequest"/>
      <wsdl:output message="tns:UpdateChargePointListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="RequestLiveRoamingAuthorisation">
      <wsdl:documentation>A CMS may request the Clearing House to authorize one single token for a charging session</wsdl:documentation>
      <wsdl:input message="tns:RequestLiveRoamingAuthorisationRequest"/>
      <wsdl:output message="tns:RequestLiveRoamingAuthorisationResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="OCHP_1.2-live">
    <wsdl:documentation>OCHP Version 1.2 Live POI Interface</wsdl:documentation>
    <wsdl:operation name="UpdateStatus">
      <wsdl:documentation>A CMS may update the current live status of individual charging stations in the Clearing House to allow roaming partners to receive those statuses.</wsdl:documentation>
      <wsdl:input message="tns:UpdateStatusRequest"/>
      <wsdl:output message="tns:UpdateStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetStatus">
      <wsdl:documentation>A NPS may receive the current live status of individual charging stations from the Clearing House.</wsdl:documentation>
      <wsdl:input message="tns:GetStatusRequest"/>
      <wsdl:output message="tns:GetStatusResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--===================================================================
                        Binding Definitions
====================================================================-->
  <wsdl:binding name="eCHS-OCHP_1.2" type="tns:OCHP_1.2">
    <wsdl:documentation>OCHP Version 1.2 Interface</wsdl:documentation>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="AddCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/AddCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/GetCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/GetRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/SetRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointList">
      <soap:operation soapAction="http://ochp.eu/1.2/GetChargePointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetChargepointList">
      <soap:operation soapAction="http://ochp.eu/1.2/SetChargepointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationListUpdates">
      <soap:operation soapAction="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ConfirmCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/ConfirmCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointListUpdates">
      <soap:operation soapAction="http://ochp.eu/1.2/GetChargePointListUpdates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateChargePointList">
      <soap:operation soapAction="http://ochp.eu/1.2/UpdateChargePointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RequestLiveRoamingAuthorisation">
      <soap:operation soapAction="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <!--Binding to the Live POI Interface-->
  <wsdl:binding name="eCHS-OCHP_1.2-live" type="tns:OCHP_1.2-live">
    <wsdl:documentation>OCHP Version 1.2 Live POI Interface</wsdl:documentation>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UpdateStatus">
      <soap:operation soapAction="http://ochp.e-clearing.net/service/UpdateStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetStatus">
      <soap:operation soapAction="http://ochp.e-clearing.net/service/GetStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <!--===================================================================
                        Service Definition
====================================================================-->
  <wsdl:service name="e-clearing.net">
    <wsdl:documentation>EEN European Emobility Network - EV Clearing Platform</wsdl:documentation>
    <wsdl:port name="eCHS_P-System" binding="tns:eCHS-OCHP_1.2">
      <wsdl:documentation>eCHS Productive System Endpoint</wsdl:documentation>
      <soap:address location="https://echs.e-clearing.net/service/ochp/v1.2"/>
    </wsdl:port>
    <wsdl:port name="eCHS_Q-System" binding="tns:eCHS-OCHP_1.2">
      <wsdl:documentation>eCHS Quality Ensurance System Endpoint</wsdl:documentation>
      <soap:address location="https://echs-q.e-clearing.net/service/ochp/v1.2"/>
    </wsdl:port>
    <!--Endpoints for the Live POI Interface-->
    <wsdl:port name="eCHS_P-System-live" binding="tns:eCHS-OCHP_1.2-live">
      <wsdl:documentation>eCHS Live-POI Productive System Endpoint</wsdl:documentation>
      <soap:address location="https://echs.e-clearing.net/live/ochp/v1.2"/>
    </wsdl:port>
    <wsdl:port name="eCHS_Q-System-live" binding="tns:eCHS-OCHP_1.2-live">
      <wsdl:documentation>eCHS Live-POI Quality Ensurance Endpoint</wsdl:documentation>
      <soap:address location="https://echs-q.e-clearing.net/live/ochp/v1.2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2/live</con:endpoint><con:endpoint>https://echs-q.e-clearing.net/live/ochp/v1.2</con:endpoint><con:endpoint>https://echs.e-clearing.net/live/ochp/v1.2</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://ochp.e-clearing.net/service/GetStatus" name="GetStatus" bindingOperationName="GetStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" outgoingWss="echs-q"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/live/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetStatusRequest>
         <!--Optional:-->
         <ns:startDateTime>
            <ns:DateTime>2014-08-22T10:00:00Z</ns:DateTime>
         </ns:startDateTime>
      </ns:GetStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.e-clearing.net/service/GetStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.e-clearing.net/service/UpdateStatus" name="UpdateStatus" bindingOperationName="UpdateStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2/live</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateStatusRequest>
         <!--Zero or more repetitions:-->
         <ns:evse major="?" minor="?" ttl="?">
            <ns:evseId>?</ns:evseId>
         </ns:evse>
         <!--Optional:-->
         <ns:ttl>
            <ns:DateTime>?</ns:DateTime>
         </ns:ttl>
      </ns:UpdateStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.e-clearing.net/service/UpdateStatus"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Specs"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2/live</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-7d694661-6d11-4e95-a201-732536ad4626">
            <wsse:Username>backend.tnm</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">Malt3Z3r?</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <soap:Body>
      <UpdateStatusRequest xmlns="http://ochp.eu/1.2">
         <evse major="available" minor="reserved">
            <evseId>DE*823*E1234*5678</evseId>
         </evse>
         <evse major="not-available" minor="blocked">
            <evseId>DE*823*E1234*6789</evseId>
         </evse>
         <ttl>
            <DateTime>2014-07-14T02:00:00.000+02:00</DateTime>
         </ttl>
      </UpdateStatusRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.e-clearing.net/service/UpdateStatus"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="eCHS-OCHP_1.2" type="wsdl" bindingName="{http://ochp.eu/1.2}eCHS-OCHP_1.2" soapVersion="1_1" anonymous="optional" definition="/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl"><con:part><con:url>file:/Users/czwirello/Projects/e-clearing-client_ochp-1.2/src/main/resources/wsdl/ochp-1.2.wsdl</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="wsdl-viewer.xsl"?>
<!--===================================================================

                  OCHP 1.2 Web Service Description

This document defines a standard interface between different parties in 
the market of electric vehicle charging infrastructure and a clearing 
house that provides a common data routing and exchange platform for all 
these market shareholders.

Please note that the given documentation tags are not holding all
available information. For a full interface description please refer
to the OCHP specification PDF you can download from http://ochp.eu.

 
 Copyright Information:
This work is licensed under the Creative Commons 
Attribution-NoDerivatives 4.0 International License. 
To view a copy of this license, visit 
http://creativecommons.org/licenses/by-nd/4.0/.

====================================================================-->
<wsdl:definitions name="OCHP_1.2" targetNamespace="http://ochp.eu/1.2" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:p="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://ochp.eu/1.2">
  <wsdl:documentation>Open Clearing House Protocol (OCHP) Version 1.2</wsdl:documentation>
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ochp.eu/1.2">
      <s:complexType name="Result" abstract="false">
        <s:annotation>
          <s:documentation>General result</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="resultCode" type="tns:ResultCodeType">
            <s:annotation>
              <s:documentation>The machine-readable result code.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="1" maxOccurs="1" nillable="true" name="resultDescription">
            <s:annotation>
              <s:documentation>The human-readable error description</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="1000"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="AddCDRsRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="cdrInfoArray" type="tns:CDRInfo">
              <s:annotation>
                <s:documentation>This contains one or more Charge
									Detail Records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddCDRsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of AddCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="implausibleCdrsArray" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the refused Charge Detail Records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCDRsRequest">
        <s:complexType>
          <s:annotation>
            <s:documentation>Defines the GetCDRs.req.</s:documentation>
          </s:annotation>
        </s:complexType>
      </s:element>
      <s:element name="GetCDRsResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetCDRs request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="cdrInfoArray" type="tns:CDRInfo">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been sent towards the calling provider.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="RoamingAuthorisationInfo">
        <s:annotation>
          <s:documentation>Authorized card info.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="EmtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Electrical vehicle contract identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="contractId" type="tns:ContractId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>EMA-ID the token belongs to</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" maxOccurs="1" name="printedNumber">
            <s:annotation>
              <s:documentation>Might be used for manual authorisation</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="150"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element minOccurs="1" maxOccurs="1" name="expiryDate" type="tns:DateTimeType">
            <s:annotation>
              <s:documentation>Tokens may be used until the date of expiry is reached. To be handled by the partners systems. Expired roaming authorisations may be erased locally by each partner's system.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="GetRoamingAuthorisationListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetRoamingAuthorisationList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetRoamingAuthorisationListRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetRoamingAuthorisationListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetRoamingAuthorisationList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of SetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedRoamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListRequest">
        <s:complexType>
          <s:annotation>
            <s:documentation>Defines the GetChargePointList.req.</s:documentation>
          </s:annotation>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a GetChargePointList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="chargePointInfoArray" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetChargePointListRequest">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="unbounded" name="chargepointInfoArray" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetChargePointListResponse">
        <s:complexType>
          <s:annotation>
            <s:documentation>This result will be returned on a SetChargePointList request.</s:documentation>
          </s:annotation>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="result" type="tns:Result">
              <s:annotation>
                <s:documentation>This contains the result of SetChargePointList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedChargePointInfo" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="CDRInfo">
        <s:annotation>
          <s:documentation>CDR info.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="CdrId" type="tns:CdrId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, Charge Data Record number. Unique per EVSE-ID.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Unique identifier for every EVSE following a common scheme with a major id-unit reflecting the country and the market partner issuing it.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="emtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Utilized token for this charging session.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="contractId" type="tns:ContractId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Identifies a customer in the electric mobility charging context.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="liveAuthId" type="tns:LiveAuthId" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>References a live authorisation request to the clearing house. Must be specified if the charging process was authorized by the clearing house directly in a call to RequestLiveRoamingAuthorisation.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:CdrStatusType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Current status of the CDR. Must be set to "new" by the issuing CMS. Shall not be changed by any partner but only by the CHS.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="startDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Start date and time of charge session
								(login with the RFID badge). Local time
								of the charge point is used.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDateTime" type="tns:LocalDateTimeType" maxOccurs="1" minOccurs="1">
            <s:annotation>
              <s:documentation>End date and time of the charge session (log-off with the RFID badge or physical disconnect). Must be set in the local time of the charge point.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="duration" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Duration of the charge session. Example "000:18:00"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="9"/>
                <s:pattern value="(\d\d\d):(\d\d):(\d\d)"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="houseNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Hose number at the location of the charge point. Alphanumeric, for example "10","255B"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="6"/>
                <s:pattern value="[A-Z0-9 ]{1,6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="address" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, for example "Av. Saint-Jean". Optionally also containing the house number if not in field houseNumber</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="zipCode" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, Examples: "60439", "8011 PK". Without the leading country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="10"/>
                <s:pattern value="[A-Z0-9\- ]{1,10}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="city" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic, in the language defined in locationNameLang</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="country" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. ISO 3166 country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="3"/>
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="chargePointType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The type of the charge point "AC" or "DC"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="AC"/>
                <s:enumeration value="DC"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="connectorType" type="tns:ConnectorType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Type of utilized socket or connector</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="maxSocketPower" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Maximum available power at the socket in kilowatts. Example: "3.7", "11", "22"</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="productType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Identifies the type of the product that was delivered for the charging session. Custom product code.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="2"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="meterId" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Written identification number of the physical energy meter, provided by the manufacturer. For future use.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="20"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="chargingPeriods" type="tns:CdrPeriodType" minOccurs="1" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>One period per item on the bill. At the moment only one period is to be provided</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="DateTimeType">
        <s:sequence>
          <s:element name="DateTime">
            <s:annotation>
              <s:documentation>Format is according to ISO8601 UTC. The field takes 20 alphanumeric characters</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="20"/>
                <s:pattern value="(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)Z"/>
                <s:whiteSpace value="collapse"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="EmtId">
        <s:sequence>
          <s:element name="instance" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The authorization tokens are defined according to the specification of the EMT-ID (Token ID). Each token consists of an token instance which holds the payload and at least the token type. The sub-type is for further specification of the general token type.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="512"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="tokenType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The type of the supplied instance for basic filtering.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="rfid"/>
                <s:enumeration value="remote"/>
                <s:enumeration value="15118"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="tokenSubType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The exact type of the supplied instance for referencing purpose.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="mifareCls"/>
                <s:enumeration value="mifareDes"/>
                <s:enumeration value="calypso"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
        <s:attribute name="representation" default="sha-160">
          <s:annotation>
            <s:documentation>Specifies the representation of the token to allow hashed token values.
								plain:   The token instance is represented in plain text;
								sha-160: The token instance is represented in its 160bit SHA1 hash in 40 hexadecimal digits;
								sha-256: The token instance is represented in its 256bit SHA2 hash in 64 hexadecimal digits;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="plain"/>
              <s:enumeration value="sha-160"/>
              <s:enumeration value="sha-256"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
      </s:complexType>
      <s:element name="GetRoamingAuthorisationListUpdatesRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="lastUpdate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Date and time since the last successful call of GetRoamingAuthorisationList.req or GetRoamingAuthorisationListUpdate.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRoamingAuthorisationListUpdatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationListUpdate.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="roamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records changed since the time specified in lastUpdate in the request</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateRoamingAuthorisationListRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="roamingAuthorisationInfoArray" type="tns:RoamingAuthorisationInfo" minOccurs="1" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records to be updated or added</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateRoamingAuthorisationListResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedRoamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConfirmCDRsRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="approved" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been approved by the EVSP</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="declined" type="tns:CDRInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the CDRs that have been declined by the EVSP.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConfirmCDRsResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of ConfirmCDRs.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetChargePointListUpdatesRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="lastUpdate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Date and time since the last successful call of GetChargePointList.req of GetChargePointListUpdates.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRoamingAuthorisationListRequest">
        <s:complexType/>
      </s:element>
      <s:element name="GetChargePointListUpdatesResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>this contains the result of GetChargePointListUpdates.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="chargePointInfoArray" type="tns:ChargePointInfo" minOccurs="0" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the charge point information records changed since the time specified in lastUpdate in the request</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateChargePointListRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="chargePointInfoArray" type="tns:ChargePointInfo" minOccurs="1" maxOccurs="unbounded">
              <s:annotation>
                <s:documentation>This contains the charge point information records to be updated or added</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateChargePointListResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateChargePointList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element minOccurs="0" maxOccurs="unbounded" name="refusedChargePointInfo" type="tns:ChargePointInfo">
              <s:annotation>
                <s:documentation>This contains the charge point information records that could not be set in the clearing house. For error description see the result message.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RequestLiveRoamingAuthorisationRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="emtId" type="tns:EmtId" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the ID of the token which is to be validated</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>Unique identifier for every EVSE following a common scheme with a major id-unit reflecting the country and the market partner issuing it</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RequestLiveRoamingAuthorisationResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of GetRoamingAuthorisationList.req</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="roamingAuthorisationInfo" type="tns:RoamingAuthorisationInfo" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the roaming authorisation record for the requested token, if the request was valid.</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="liveAuthId" type="tns:LiveAuthId" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>Unique ID of the live authorisation request to the clearing house. Must be used for the corresponding CDR to reference this request.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LocalDateTimeType">
        <s:annotation>
          <s:documentation>Format is according to ISO8601 UTC + Offset. The field takes 25 alphanumeric characters</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="LocalDateTime">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="25"/>
                <s:whiteSpace value="collapse"/>
                <s:pattern value="(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)([+\-]\d\d):(\d\d)"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="CdrStatusType">
        <s:sequence>
          <s:element name="CdrStatusType">
            <s:annotation>
              <s:documentation>new; A new CDR before upload to the CHS
								accepted; An uploaded CDR was accepted by the CHS as plausible
								rejected; The checked CDR again rejected by the CHS and is to be archived.
								owner declined; The CDR was declined by the owner (EVSP)
								approved; The CDR was approved by the owner(EVSP)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="new"/>
                <s:enumeration value="accepted"/>
                <s:enumeration value="rejected"/>
                <s:enumeration value="owner declined"/>
                <s:enumeration value="approved"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorType">
        <s:sequence>
          <s:element name="connectorStandard" minOccurs="1" maxOccurs="1" type="tns:ConnectorStandard">
            <s:annotation>
              <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="connectorFormat" minOccurs="1" maxOccurs="1" type="tns:ConnectorFormat">
            <s:annotation>
              <s:documentation>The format (socket/ cable) of the installed connector Socket The connector is a socket; the EV user needs to bring a fitting plug. Cable The connector is an attached cable; the EV user car needs to have a fitting inlet.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="CdrPeriodType">
        <s:sequence>
          <s:element name="startDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Starting time of period. Must be equal or later than startDateTime of the CDRInfo</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDateTime" type="tns:LocalDateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Ending time of the period. Must be equal or earlier than endDateTime of the CDRInfo</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="billingItem" type="tns:BillingItemType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Defines what the EVSP is charged for during this period</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="billingValue" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>The value the EVSP is charged for. The unit of the value depends on the billingItem</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="currency" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic. The displayed and charged currency. Defined in ISO 4217 - Table A.1, alphabetic list.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:whiteSpace value="collapse"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="itemPrice" type="s:float" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Price per unit of the billingItem in the given currency.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="periodCost" type="s:float" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The cost of the period in the given currency.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="BillingItemType">
        <s:sequence>
          <s:element name="BillingItemType">
            <s:simpleType>
              <s:annotation>
                <s:documentation>parkingtime; Price for parking, The billingValue represents the time in hours 
									usagetime; Price for the time of EVSE usage. The billingValue represents the time in hours 
									energy; Price for the consumed energy. The billingValue represents the energy in kilowatt-hours. 
									power; Price for the consumed energy. The billingValue represents the maximum power in kilowatts 
									serviceFee; General service fee per charging process. The billingValue represents multiplier and thus has to be set to "1.0"</s:documentation>
              </s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="parkingtime"/>
                <s:enumeration value="usagetime"/>
                <s:enumeration value="energy"/>
                <s:enumeration value="power"/>
                <s:enumeration value="serviceFee"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="GeoPointType">
        <s:sequence>
          <s:element name="lat" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Latitude of the Point in decimal degree. Example: 50.104965 Decimal separator: "." Regex: -?[0-9]{1,2}\.[0-9]{6}</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="-?[0-9]{1,2}\.[0-9]{6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="lon" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Longitude of the decimal degree Example: -126.104965 Decimal separator: "." Regex: -?[0-9]{1,3}\.[0-9]{6}</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="-?[0-9]{1,3}\.[0-9]{6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorStandard">
        <s:sequence>
          <s:element name="ConnectorStandard">
            <s:annotation>
              <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:annotation>
                <s:documentation>The Standard of the installed connector; 
									CHADEMO                The connector type is CHAdeMO, DC 
									IEC-62196-T1           The connector type is IEC 62196 Type 1 “SAE J1772”
									IEC-62196-T1-COMBO     The connector type is Combo Type 1 based, DC 
									IEC-62196-T2           The connector type is IEC 62196 Type 2 “Mennekes” 
									IEC-62196-T2-COMBO     The connector type is Combo Type 2 based, DC
									IEC-62196-T3A          The connector type is IEC 62196 Type 3A 
									IEC-62196-T3C          The connector type is IEC 62196 Type 3C “Scame” 
									DOMESTIC-A             The connector type is Standard/Domestic household, type "A", NEMA 1-15, 2 pins 
									DOMESTIC-B             The connector type is Standard/Domestic household, type "B", NEMA 5-15, 3 pins
									DOMESTIC-C             The connector type is Standard/Domestic household, type "C", CEE 7/17, 2 pins 
									DOMESTIC-D             The connector type is Standard/Domestic household, type "D", 3 pin 
									DOMESTIC-E             The connector type is Standard/Domestic household, type "E", CEE 7/5 3 pins
									DOMESTIC-F             The connector type is Standard/Domestic household, type "F", CEE 7/4, Schuko, 3 pins 
									DOMESTIC-G             The connector type is Standard/Domestic household, type "G", BS 1363, Commonwealth, 3 pins 
									DOMESTIC-H             The connector type is Standard/Domestic household, type "H", SI-32, 3 pins
									DOMESTIC-I             The connector type is Standard/Domestic household, type "I", AS 3112, 3 pins 
									DOMESTIC-J             The connector type is Standard/Domestic household, type "J", SEV 1011, 3 pins 
									DOMESTIC-K             The connector type is Standard/Domestic household, type "K", DS 60884-2-D1, 3 pins 
									DOMESTIC-L             The connector type is Standard/Domestic household, type "L", CEI 23-16-VII, 3 pins 
									TESLA-R                The connector type is Tesla Connector “Roadster”-type (round, 4 pin) 
									TESLA-S                The connector type is Tesla Connector “Model-S”-type (oval, 5 pin)
									IEC-60309-2-single-16  The connector type is IEC 60309-2 Industrial Connector single phase 16 Amperes (usually blue)
									IEC-60309-2-three-16   The connector type is IEC 60309-2 Industrial Connector three phase 16 Amperes (usually red)
									IEC-60309-2-three-32   The connector type is IEC 60309-2 Industrial Connector three phase 32 Amperes (usually red)
									IEC-60309-2-three-64   The connector type is IEC 60309-2 Industrial Connector three phase 64 Amperes (usually red)</s:documentation>
              </s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="Chademo"/>
                <s:enumeration value="IEC-62196-T1"/>
                <s:enumeration value="IEC-62196-T1-COMBO"/>
                <s:enumeration value="IEC-62196-T2"/>
                <s:enumeration value="IEC-62196-T2-COMBO"/>
                <s:enumeration value="IEC-62196-T3A"/>
                <s:enumeration value="IEC-62196-T3C"/>
                <s:enumeration value="DOMESTIC-A"/>
                <s:enumeration value="DOMESTIC-B"/>
                <s:enumeration value="DOMESTIC-C"/>
                <s:enumeration value="DOMESTIC-D"/>
                <s:enumeration value="DOMESTIC-E"/>
                <s:enumeration value="DOMESTIC-F"/>
                <s:enumeration value="DOMESTIC-G"/>
                <s:enumeration value="DOMESTIC-H"/>
                <s:enumeration value="DOMESTIC-I"/>
                <s:enumeration value="DOMESTIC-J"/>
                <s:enumeration value="DOMESTIC-K"/>
                <s:enumeration value="DOMESTIC-L"/>
                <s:enumeration value="TESLA-R"/>
                <s:enumeration value="TESLA-S"/>
                <s:enumeration value="IEC-60309-2-single-16"/>
                <s:enumeration value="IEC-60309-2-three-16"/>
                <s:enumeration value="IEC-60309-2-three-32"/>
                <s:enumeration value="IEC-60309-2-three-64"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="HoursType">
        <s:sequence>
          <s:element name="regularHours" type="tns:RegularHoursType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Regular hours, weekday based. Should not be set for representing 24/7 as this is the most common case</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="exceptionalOpenings" type="tns:ExceptionalPeriodType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Exceptions for specific calendar dates, time-range based. Periods the station is operating/accessible. Additional to regular hours. May overlap regular rules.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="exceptionalClosings" type="tns:ExceptionalPeriodType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Exceptions for specific calendar dates, time-range based. Periods the station is not operating/accessible. Additional to regular hours. Overwriting regularHours and exceptionalOpenings. Should not overlap exceptionalOpenings.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointStatusType">
        <s:sequence>
          <s:element name="ChargePointStatusType">
            <s:annotation>
              <s:documentation>Unknown; No status information available
								Operative; Charge point is in operation and can be used
								Inoperative; charge point cannot be used due to maintenance, failure or other restrictions (temporarily) 
								Planned; planned charge point, will be operating soon 
								Closed; discontinued charge point, will be deleted soon</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Unknown"/>
                <s:enumeration value="Operative"/>
                <s:enumeration value="Inoperative"/>
                <s:enumeration value="Planned"/>
                <s:enumeration value="Closed"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointScheduleType">
        <s:sequence>
          <s:element name="startDate" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of scheduled period.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="endDate" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of scheduled period, if known.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:ChargePointStatusType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Status value during the scheduled period.</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ParkingRestrictionType">
        <s:sequence>
          <s:element name="ParkingRestrictionType">
            <s:annotation>
              <s:documentation>* evonly reserved parking spot for electric vehicles plugged parking allowed only while plugged in (charging)
								* disabled reserved parking spot for disabled people with valid ID
								* customers parking spot for costumer/guests only, for example in case of a hotel or shop
								* motorcycles parking spot only suitable for (electric) motorcycles or scooters</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:annotation></s:annotation>
              <s:restriction base="s:string">
                <s:enumeration value="evonly"/>
                <s:enumeration value="plugged"/>
                <s:enumeration value="disabled"/>
                <s:enumeration value="customers"/>
                <s:enumeration value="motorcycles"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="AuthMethodType">
        <s:annotation>
          <s:documentation>Public; Public accessible, no authorisation required 
						LocalKey; A key or token can be received at the location.(i.e. at the hotel reception or in the restaurant) 
						DirectCash; The EVSE can be accessed through direct payment in cash. DirectCreditcard; The Evse can be accessed through direct payment with credit card
						RfidMifareCls; Personal RFID token with roaming relation. (Mifare Classic) 
						RfidMifareDes; Personal token with roaming relation. (Mifare Desfire) 
						RfidCallypso; Personal RFID token with roaming relation. (Calypso) 
						Iec15118; In-car access token as specified in IEC-15118</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="AuthMethodType">
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Public"/>
                <s:enumeration value="LocalKey"/>
                <s:enumeration value="DirectCash"/>
                <s:enumeration value="DirectCreditcard"/>
                <s:enumeration value="DirectDebitcard"/>
                <s:enumeration value="RfidMifareCls"/>
                <s:enumeration value="RfidMifareDes"/>
                <s:enumeration value="RfidCallypso"/>
                <s:enumeration value="Iec15118"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="RegularHoursType">
        <s:annotation>
          <s:documentation>Regular hours, weekday based. Number of day in the week, from Monday(1) till Sunday(7)</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="weekday" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Regular hours, weekday based. Number of day in the week, from Monday(1) till Sunday(7)</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minInclusive value="1"/>
                <s:maxInclusive value="7"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="periodBegin" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of the regular period given in hours and minutes. Must be in 24h format with leading zeros. Example "18:15" Minute/Hour separator is ":"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="5"/>
                <s:pattern value="[0-2][0-9]\:[0-5][0-9]"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="periodEnd" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of the regular period, syntax as for periodBegin. Must be later than periodBegin.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[0-2][0-9]:[0-5][0-9]"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ExceptionalPeriodType">
        <s:sequence>
          <s:element name="periodBegin" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Begin of exception</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="periodEnd" type="tns:DateTimeType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>End of exception</s:documentation>
            </s:annotation>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ChargePointInfo">
        <s:annotation>
          <s:documentation>List of available payment or access methods on site.</s:documentation>
        </s:annotation>
        <s:sequence>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Globally unique identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="locationId" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Identifies a location/pool of EVSEs. Unique within one EVSE Operator</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="15"/>
                <s:pattern value="[A-Z0-9 ]{1,15}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="timestamp" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Recommended. Date and time of the latest data update for this ChargePointInfo. When set it must be updated if one of the values changed.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="locationName" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Official name; should be unique in the geographical area</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="100"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="locationNameLang" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. ISO-639-3 language code defining the language of the location name</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:length value="3"/>
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="images" minOccurs="0" maxOccurs="unbounded" type="tns:EvseImageUrlType"/>
          <s:element name="houseNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, for example "10", "255B".</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="6"/>
                <s:pattern value="[A-Z0-9 ]{1,6}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="address" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric; for example "Av. Saint-Jean". Optionally also containing the house number if not in field houseNumber.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="2"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="city" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphabetic, in the language defined in locationNameLang</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:minLength value="1"/>
                <s:maxLength value="45"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="zipCode" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric, examples: "60439", "8011 PK". Without leading country code.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9 \-]{1,10}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="country" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alpha, three characters. Iso 3166 country code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z]{3}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="geoLocation" type="tns:GeoPointType" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Geographical location of the charge point itself (power outlet).</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoUserInterface" type="tns:GeoPointType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Geographical location of the user interface for authorisation and payment means. If not specified the user interface is assumed to be at the location specified in geoLocation</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoSiteEntrance" type="tns:GeoPointType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>For larger sites entrances may be specified for navigation purpose.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="geoSiteExit" type="tns:GeoPointType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>For larger sites exits may be specified for navigation purpose. If only entrances are set, two-direction traffic is assumed.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="operatingTimes" type="tns:HoursType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The times the EVSE is operating and can be used for charging. Must nor be provided if operating hours are unsure/unknown</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="accessTimes" type="tns:HoursType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The times the EVSE is accessible, if different from operatingTimes. For example if a car park is closed during the night. Must not be provided if access hours are unsure/unknown</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="status" type="tns:ChargePointStatusType" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>The current status of the charge point.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="statusSchedule" type="tns:ChargePointScheduleType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Planned status changes in the future. If a time span matches with the current or displayed date, the corresponding value overwrites "status"</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="telephoneNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Numeric. Service hotline for charging station to be displayed. to the EV user. Separators recommended.</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[0-9 \-]{1,20}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="floorLevel" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Level on which the charge station is located (in garage buildings) in the locally displayed numbering scheme. Examples: "-2","P-5", "2", "+5"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9\-\+/]{1,4}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="parkingSlotNumber" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Alphanumeric. Locally displayed parking slot number. Examples: "10", "251","B25", "P-234"</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z0-9\-\+/]{1,5}"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="parkingRestriction" type="tns:ParkingRestrictionType" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>This value, if provided, represents the restriction to the parking spot for different purposes.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="authMethods" type="tns:AuthMethodType" minOccurs="1" maxOccurs="unbounded"></s:element>
          <s:element name="connectors" type="tns:ConnectorType" minOccurs="1" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Which receptable type is/are present for a power outlet.</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="userInterfaceLang" minOccurs="0" maxOccurs="unbounded">
            <s:annotation>
              <s:documentation>Alpha, three characters. Language(s) of the user interface or printed on-site instructions. ISO-639-3 language code</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="[A-Z]{3}"/>
                <s:length value="3"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ConnectorFormat">
        <s:sequence>
          <s:element name="ConnectorFormat">
            <s:annotation>
              <s:documentation>The format (socket/ cable) of the installed connector.
									Socket; The connector is a socket; the EV user needs to bring a fitting plug 
									Cable; The connector is an attached cable; the EV user car needs to have a fitting inlet</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="Socket"/>
                <s:enumeration value="Cable"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:complexType name="ResultCodeType">
        <s:sequence>
          <s:element name="resultCode">
            <s:annotation>
              <s:documentation>ok: Data accepted and processed; 
								server: Internal server error; 
								other: Other error type. See description for details;
								format: Data could not be processed due to formal error in SOAP message;
								missing: A mandatory value was missing;
								range: A given value was out of the allowed range;</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="ok"/>
                <s:enumeration value="server"/>
                <s:enumeration value="other"/>
                <s:enumeration value="format"/>
                <s:enumeration value="missing"/>
                <s:enumeration value="range"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:simpleType name="CdrId">
        <s:restriction base="s:string">
          <s:minLength value="1"/>
          <s:maxLength value="36"/>
          <s:pattern value="[0-9A-Z]{1,36}"/>
        </s:restriction>
      </s:simpleType>
      <s:complexType name="EvseImageUrlType">
        <s:sequence>
          <s:element name="uri" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>uri from where the image data can be fetched. Must begin with a protocol of the list: http, https, file, ftp</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="(http|https|ftp|file):\/\/.+"/>
                <s:maxLength value="255"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="thumbUri" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>uri from where a thumbnail of the image can be fetched. Must begin with a protocol of the list: http, https, file, ftp</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:pattern value="(http|https|ftp|file):\/\/.+"/>
                <s:maxLength value="255"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="class" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Image class for usage categorization. Values: 
									networkLogo: logo of a associated roaming network to be displayed with the EVSE for example in lists, maps and detailed information view; 
									operatorLogo: logo of the charge points operator, for example a municipal, to be displayed with the EVSEs detailed information view or in lists and maps, if no networkLogo is present; 
									ownerLogo: logo of the charge points owner, for example a local store, to be displayed with the EVSEs detailed information view; 
									stationPhoto: full view photo of the station in field. Should show the station only;
									locationPhoto: location overview photo. Should indicate the location of the station on the site or street.;
									entrancePhoto: location entrance photo. Should show the car entrance to the location from street side; 
									otherPhoto: other related photo to be displayed with the stations detailed information view;
									otherLogo: other related logo to be displayed with the stations detailed information view; 
									otherGraphic: other related graphic to be displayed with the stations detailed information view;</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:enumeration value="networkLogo"/>
                <s:enumeration value="operatorLogo"/>
                <s:enumeration value="ownerLogo"/>
                <s:enumeration value="stationPhoto"/>
                <s:enumeration value="locationPhoto"/>
                <s:enumeration value="entrancePhoto"/>
                <s:enumeration value="otherPhoto"/>
                <s:enumeration value="otherLogo"/>
                <s:enumeration value="otherGraphic"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="type" minOccurs="1" maxOccurs="1">
            <s:annotation>
              <s:documentation>Image type like: gif, jpeg, png, svg</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:string">
                <s:maxLength value="4"/>
                <s:minLength value="1"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="width" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Width of the full scale image</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minExclusive value="0"/>
                <s:maxInclusive value="99999"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
          <s:element name="height" minOccurs="0" maxOccurs="1">
            <s:annotation>
              <s:documentation>Height of the full scale image</s:documentation>
            </s:annotation>
            <s:simpleType>
              <s:restriction base="s:int">
                <s:minExclusive value="0"/>
                <s:maxInclusive value="99999"/>
              </s:restriction>
            </s:simpleType>
          </s:element>
        </s:sequence>
      </s:complexType>
      <s:element name="UpdateStatusRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="evse" minOccurs="0" maxOccurs="unbounded" type="tns:EvseStatusType">
              <s:annotation>
                <s:documentation>This contains one EVSE id with the current status represented in a major part and a minor part.</s:documentation>
              </s:annotation>
            </s:element>
            <s:element name="ttl" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>The time to live is set as the deadline till the status values are to be considered valid, where not otherwise specified.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UpdateStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="result" type="tns:Result" minOccurs="1" maxOccurs="1">
              <s:annotation>
                <s:documentation>This contains the result of UpdateStatus.req</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetStatusRequest">
        <s:complexType>
          <s:sequence>
            <s:element name="startDateTime" type="tns:DateTimeType" minOccurs="0" maxOccurs="1">
              <s:annotation>
                <s:documentation>If this value is set to a point in the past, the response is limited to status
information that is more actual than the given value.</s:documentation>
              </s:annotation>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetStatusResponse">
        <s:complexType>
          <s:sequence>
            <s:element name="evse" type="tns:EvseStatusType" minOccurs="0" maxOccurs="unbounded"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="EvseStatusType">
        <s:sequence>
          <s:element name="evseId" type="tns:EvseId" minOccurs="1" maxOccurs="1"/>
        </s:sequence>
        <s:attribute name="major" use="required">
          <s:annotation>
            <s:documentation>The major status type reflects the overall status of the EVSE. Values:
								available: the EVSE is able to start a new charging process;
								not-available: at the moment no new charging process may be started;
								unknown: the current status of the EVSE is not known;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="available"/>
              <s:enumeration value="not-available"/>
              <s:enumeration value="unknown"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
        <s:attribute name="minor" use="optional">
          <s:annotation>
            <s:documentation>The optional minor status type reflects the detailed status of the EVSE in addition to the major status. For each minor status value a proposed ttl value is given. However, the ttl should only be set to a value other than default if the expected status change is known or can be predicted. Values:
								available: the EVSE is able to start a new charging process;
								reserved: the EVSE is able to start a new charging process for limited duration as a future reservation is present. ttl to be set on the start of the reservation;
								charging: the EVSE is in use. ttl to be set on the expected end of the charging process;
								blocked: the EVSE not accessible because of a physical barrier, i.e. a car;
								outoforder: the EVSE is currently out of order. ttl to be set to the expected re-enabling;</s:documentation>
          </s:annotation>
          <s:simpleType>
            <s:restriction base="s:string">
              <s:enumeration value="available"/>
              <s:enumeration value="reserved"/>
              <s:enumeration value="charging"/>
              <s:enumeration value="blocked"/>
              <s:enumeration value="outoforder"/>
            </s:restriction>
          </s:simpleType>
        </s:attribute>
        <s:attribute name="ttl" type="s:dateTime" use="optional">
          <s:annotation>
            <s:documentation>The time to live is set as the deadline till the status value is to be considered valid.  Should be set to the expected status change.</s:documentation>
          </s:annotation>
        </s:attribute>
      </s:complexType>
      <s:simpleType name="EvseId">
        <s:annotation>
          <s:documentation>The EVSE-ID is uniquely referencing one charge point.</s:documentation>
        </s:annotation>
        <s:restriction base="s:string">
          <s:pattern value="[A-Za-z]{2}\*[A-Za-z0-9]{3}\*[Ee][A-Za-z0-9][A-Za-z0-9\*]{0,30}"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[Ee][A-Za-z0-9][A-Za-z0-9\*]{0,30}"/>
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="ContractId">
        <s:annotation>
          <s:documentation>The Contract-ID or EVCO-ID is uniquely referencing one customer account of a service provider.</s:documentation>
        </s:annotation>
        <s:restriction base="s:string">
          <s:pattern value="[A-Za-z]{2}-[A-Za-z0-9]{3}-[A-Za-z0-9]{9}-[A-Za-z0-9]"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[A-Za-z0-9]{9}[A-Za-z0-9]"/>
          <s:pattern value="[A-Za-z]{2}-[A-Za-z0-9]{3}-[A-Za-z0-9]{9}"/>
          <s:pattern value="[A-Za-z]{2}[A-Za-z0-9]{3}[A-Za-z0-9]{9}"/>
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="LiveAuthId">
        <s:restriction base="s:string">
          <s:pattern value="[A-Z0-9\-]*"/>
          <s:minLength value="1"/>
          <s:maxLength value="15"/>
        </s:restriction>
      </s:simpleType>
    </s:schema>
  </wsdl:types>
  <!--===================================================================
                        Messages
====================================================================-->
  <!--Messages for the Exchange of Authorisation Data-->
  <wsdl:message name="GetRoamingAuthorisationListInput">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListOutput">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="SetRoamingAuthorisationListInput">
    <wsdl:part name="parameters" element="tns:SetRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <wsdl:message name="SetRoamingAuthorisationListOutput">
    <wsdl:part name="parameters" element="tns:SetRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListUpdatesRequest">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListUpdatesRequest"/>
  </wsdl:message>
  <wsdl:message name="GetRoamingAuthorisationListUpdatesResponse">
    <wsdl:part name="parameters" element="tns:GetRoamingAuthorisationListUpdatesResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateRoamingAuthorisationListResponse">
    <wsdl:part name="parameters" element="tns:UpdateRoamingAuthorisationListResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateRoamingAuthorisationListRequest">
    <wsdl:part name="parameters" element="tns:UpdateRoamingAuthorisationListRequest"/>
  </wsdl:message>
  <!--Messages for the Exchange of Charge Data-->
  <wsdl:message name="AddCDRsInput">
    <wsdl:part name="parameters" element="tns:AddCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="AddCDRsOutput">
    <wsdl:part name="parameters" element="tns:AddCDRsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCDRsInput">
    <wsdl:part name="parameters" element="tns:GetCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetCDRsOutput">
    <wsdl:part name="parameters" element="tns:GetCDRsResponse"/>
  </wsdl:message>
  <wsdl:message name="ConfirmCDRsRequest">
    <wsdl:part name="parameters" element="tns:ConfirmCDRsRequest"/>
  </wsdl:message>
  <wsdl:message name="ConfirmCDRsResponse">
    <wsdl:part name="parameters" element="tns:ConfirmCDRsResponse"/>
  </wsdl:message>
  <!--Messages for the Exchange of Charge Point Information-->
  <wsdl:message name="GetChargepointListInput">
    <wsdl:part name="parameters" element="tns:GetChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="GetChargepointListOutput">
    <wsdl:part name="parameters" element="tns:GetChargePointListResponse"/>
  </wsdl:message>
  <wsdl:message name="SetChargepointListInput">
    <wsdl:part name="parameters" element="tns:SetChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="SetChargepointListOutput">
    <wsdl:part name="parameters" element="tns:SetChargePointListResponse"/>
  </wsdl:message>
  <wsdl:message name="GetChargePointListUpdatesRequest">
    <wsdl:part name="parameters" element="tns:GetChargePointListUpdatesRequest"/>
  </wsdl:message>
  <wsdl:message name="GetChargePointListUpdatesResponse">
    <wsdl:part name="parameters" element="tns:GetChargePointListUpdatesResponse"/>
  </wsdl:message>
  <wsdl:message name="UpdateChargePointListRequest">
    <wsdl:part name="parameters" element="tns:UpdateChargePointListRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateChargePointListResponse">
    <wsdl:part name="parameters" element="tns:UpdateChargePointListResponse"/>
  </wsdl:message>
  <!--Messages for live authorisation-->
  <wsdl:message name="RequestLiveRoamingAuthorisationRequest">
    <wsdl:part name="parameters" element="tns:RequestLiveRoamingAuthorisationRequest"/>
  </wsdl:message>
  <wsdl:message name="RequestLiveRoamingAuthorisationResponse">
    <wsdl:part name="parameters" element="tns:RequestLiveRoamingAuthorisationResponse"/>
  </wsdl:message>
  <!--Messages for the Live Status Interface-->
  <wsdl:message name="UpdateStatusRequest">
    <wsdl:part name="parameters" element="tns:UpdateStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateStatusResponse">
    <wsdl:part name="parameters" element="tns:UpdateStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetStatusRequest">
    <wsdl:part name="parameters" element="tns:GetStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetStatusResponse">
    <wsdl:part name="parameters" element="tns:GetStatusResponse"/>
  </wsdl:message>
  <!--===================================================================
                        Port Definitions
====================================================================-->
  <wsdl:portType name="OCHP_1.2">
    <wsdl:documentation>OCHP Version 1.2 Interface</wsdl:documentation>
    <wsdl:operation name="AddCDRs">
      <wsdl:documentation>Local roaming charge data records are sent from the CMS to the CHS.</wsdl:documentation>
      <wsdl:input message="tns:AddCDRsInput"/>
      <wsdl:output message="tns:AddCDRsOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetCDRs">
      <wsdl:documentation>Cleared roaming charge data records, held at the CHS are sent from the CHS to the MDM. Note that only cleared CDRs that concern the EVSP are sent.</wsdl:documentation>
      <wsdl:input message="tns:GetCDRsInput"/>
      <wsdl:output message="tns:GetCDRsOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationList">
      <wsdl:documentation>A CMS downloads the global authorisation data repository from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetRoamingAuthorisationListInput"/>
      <wsdl:output message="tns:GetRoamingAuthorisationListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="SetRoamingAuthorisationList">
      <wsdl:documentation>The MDM of each EVSP has to exchange the own authorisation data with the Clearing House to share that data with EVSE Operators.</wsdl:documentation>
      <wsdl:input message="tns:SetRoamingAuthorisationListInput"/>
      <wsdl:output message="tns:SetRoamingAuthorisationListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointList">
      <wsdl:documentation>A NPS downloads the global charge point information from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetChargepointListInput"/>
      <wsdl:output message="tns:GetChargepointListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="SetChargepointList">
      <wsdl:documentation>Local roaming charge data records are sent from the CMS to the CHS.</wsdl:documentation>
      <wsdl:input message="tns:SetChargepointListInput"/>
      <wsdl:output message="tns:SetChargepointListOutput"/>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationListUpdates">
      <wsdl:documentation>A CMS downloads the changes to the global authorisation data repository since the last synchronization from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetRoamingAuthorisationListUpdatesRequest"/>
      <wsdl:output message="tns:GetRoamingAuthorisationListUpdatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateRoamingAuthorisationList">
      <wsdl:documentation>For later updates of authorization data from the MDM to the Clearing House and the EVSE Operators, only the changed entries (delta) have to be transferred.</wsdl:documentation>
      <wsdl:input message="tns:UpdateRoamingAuthorisationListRequest"/>
      <wsdl:output message="tns:UpdateRoamingAuthorisationListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ConfirmCDRs">
      <wsdl:documentation>Cleared roaming charge data records, downloaded from the CHS are confirmed by the MDM. An EVSE-Operator has to confirm every downloaded CDR either with an accept or a revoke.</wsdl:documentation>
      <wsdl:input message="tns:ConfirmCDRsRequest"/>
      <wsdl:output message="tns:ConfirmCDRsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointListUpdates">
      <wsdl:documentation>A NPS downloads the changes to the global charge point information data repository since the last synchronization from the CHS.</wsdl:documentation>
      <wsdl:input message="tns:GetChargePointListUpdatesRequest"/>
      <wsdl:output message="tns:GetChargePointListUpdatesResponse"/>
    </wsdl:operation>
    <wsdl:operation name="UpdateChargePointList">
      <wsdl:documentation>For later updates of charge point information from the CIMS to the Clearing House and the EVSPs, only the changed entries (delta) have to be transferred.</wsdl:documentation>
      <wsdl:input message="tns:UpdateChargePointListRequest"/>
      <wsdl:output message="tns:UpdateChargePointListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="RequestLiveRoamingAuthorisation">
      <wsdl:documentation>A CMS may request the Clearing House to authorize one single token for a charging session</wsdl:documentation>
      <wsdl:input message="tns:RequestLiveRoamingAuthorisationRequest"/>
      <wsdl:output message="tns:RequestLiveRoamingAuthorisationResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="OCHP_1.2-live">
    <wsdl:documentation>OCHP Version 1.2 Live POI Interface</wsdl:documentation>
    <wsdl:operation name="UpdateStatus">
      <wsdl:documentation>A CMS may update the current live status of individual charging stations in the Clearing House to allow roaming partners to receive those statuses.</wsdl:documentation>
      <wsdl:input message="tns:UpdateStatusRequest"/>
      <wsdl:output message="tns:UpdateStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="GetStatus">
      <wsdl:documentation>A NPS may receive the current live status of individual charging stations from the Clearing House.</wsdl:documentation>
      <wsdl:input message="tns:GetStatusRequest"/>
      <wsdl:output message="tns:GetStatusResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <!--===================================================================
                        Binding Definitions
====================================================================-->
  <wsdl:binding name="eCHS-OCHP_1.2" type="tns:OCHP_1.2">
    <wsdl:documentation>OCHP Version 1.2 Interface</wsdl:documentation>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="AddCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/AddCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/GetCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/GetRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/SetRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointList">
      <soap:operation soapAction="http://ochp.eu/1.2/GetChargePointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetChargepointList">
      <soap:operation soapAction="http://ochp.eu/1.2/SetChargepointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRoamingAuthorisationListUpdates">
      <soap:operation soapAction="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateRoamingAuthorisationList">
      <soap:operation soapAction="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ConfirmCDRs">
      <soap:operation soapAction="http://ochp.eu/1.2/ConfirmCDRs"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetChargePointListUpdates">
      <soap:operation soapAction="http://ochp.eu/1.2/GetChargePointListUpdates"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UpdateChargePointList">
      <soap:operation soapAction="http://ochp.eu/1.2/UpdateChargePointList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RequestLiveRoamingAuthorisation">
      <soap:operation soapAction="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <!--Binding to the Live POI Interface-->
  <wsdl:binding name="eCHS-OCHP_1.2-live" type="tns:OCHP_1.2-live">
    <wsdl:documentation>OCHP Version 1.2 Live POI Interface</wsdl:documentation>
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="UpdateStatus">
      <soap:operation soapAction="http://ochp.e-clearing.net/service/UpdateStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetStatus">
      <soap:operation soapAction="http://ochp.e-clearing.net/service/GetStatus"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <!--===================================================================
                        Service Definition
====================================================================-->
  <wsdl:service name="e-clearing.net">
    <wsdl:documentation>EEN European Emobility Network - EV Clearing Platform</wsdl:documentation>
    <wsdl:port name="eCHS_P-System" binding="tns:eCHS-OCHP_1.2">
      <wsdl:documentation>eCHS Productive System Endpoint</wsdl:documentation>
      <soap:address location="https://echs.e-clearing.net/service/ochp/v1.2"/>
    </wsdl:port>
    <wsdl:port name="eCHS_Q-System" binding="tns:eCHS-OCHP_1.2">
      <wsdl:documentation>eCHS Quality Ensurance System Endpoint</wsdl:documentation>
      <soap:address location="https://echs-q.e-clearing.net/service/ochp/v1.2"/>
    </wsdl:port>
    <!--Endpoints for the Live POI Interface-->
    <wsdl:port name="eCHS_P-System-live" binding="tns:eCHS-OCHP_1.2-live">
      <wsdl:documentation>eCHS Live-POI Productive System Endpoint</wsdl:documentation>
      <soap:address location="https://echs.e-clearing.net/live/ochp/v1.2"/>
    </wsdl:port>
    <wsdl:port name="eCHS_Q-System-live" binding="tns:eCHS-OCHP_1.2-live">
      <wsdl:documentation>eCHS Live-POI Quality Ensurance Endpoint</wsdl:documentation>
      <soap:address location="https://echs-q.e-clearing.net/live/ochp/v1.2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:endpoint>https://echs.e-clearing.net/service/ochp/v1.2</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://ochp.eu/1.2/AddCDRs" name="AddCDRs" bindingOperationName="AddCDRs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:AddCDRsRequest>
         <!--1 or more repetitions:-->
         <ns:cdrInfoArray>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:cdrInfoArray>
      </ns:AddCDRsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/AddCDRs"/><con:wsrmConfig version="1.2"/></con:call><con:call name="ok"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:AddCDRsRequest>
         <!--1 or more repetitions:-->
         <ns:cdrInfoArray>
            <ns:CdrId>123456someId123456</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:cdrInfoArray>
      </ns:AddCDRsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/AddCDRs"/><con:wsrmConfig version="1.2"/></con:call><con:call name="formattingDummy"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-85161cbf-4605-434e-b59e-6c78a3a70bc8">
            <wsse:Username>""</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">""</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <soap:Body>
      <SetRoamingAuthorisationListRequest xmlns="http://ochp.eu/1.2">
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>02C0D078</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000033963M</contractId>
            <expiryDate>
               <DateTime>2014-09-25T00:00:00.000+02:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>040648B2752680</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000017527W</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04167EE2952F81</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000679110H</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>0470C0E2952F80</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000679061B</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04851BD2802280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000074625T</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>048C4792213180</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000466650U</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04935192213180</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000466641V</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>0495F692213180</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000470017S</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04A354AA213180</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000269603E</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04A98ACAF52680</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM001000042W</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04A9A5E2952F80</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000679070A</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04AD4ADA2B2B80</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM001010824Y</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04B8D702CE2B80</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM0001753945</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04BB1392253190</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000412785R</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04C42C02CE2B80</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>BETNM0000017717</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04DA6D42B32280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>BETNM0000006068</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04E3C3D2802280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000113673W</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04E52CC2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000132429H</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04E9F0D2802280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000117133T</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EF9CC2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM00012345XK</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EFA8C2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000119042E</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EFAAC2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000123024V</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EFB0C2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000123223W</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EFBCC2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000123364Z</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04EFFAC2552280</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM0001232973</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>0A833229</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000009497P</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>1234567890ABCDEF</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>ASDAS00DASDASDT</contractId>
            <expiryDate>
               <DateTime>2020-01-01T00:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>2A2F5066</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM00001339XE</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>2ABD4B66</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000009482B</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>4922592213180</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000463373V</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>C289017D</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000038154Y</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>DAE14B66</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000008168X</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>EAD44B66</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000005931P</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>FA163E29</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000011603W</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>FA6C4B66</instance>
               <tokenType>rfid</tokenType>
            </EmtId>
            <contractId>NLTNM000007715R</contractId>
            <expiryDate>
               <DateTime>2100-01-01T01:00:00.000+01:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
      </SetRoamingAuthorisationListRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/AddCDRs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/ConfirmCDRs" name="ConfirmCDRs" bindingOperationName="ConfirmCDRs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ConfirmCDRsRequest>
         <!--Zero or more repetitions:-->
         <ns:approved>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:approved>
         <!--Zero or more repetitions:-->
         <ns:declined>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:declined>
      </ns:ConfirmCDRsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/ConfirmCDRs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/GetCDRs" name="GetCDRs" bindingOperationName="GetCDRs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" outgoingWss="echs-q" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:ns="http://ochp.eu/1.2" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>

   </soapenv:Header>
   <soapenv:Body>
      <ns:GetCDRsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username/><con:password/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetCDRs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/GetChargePointList" name="GetChargePointList" bindingOperationName="GetChargePointList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" outgoingWss="echs-q"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetChargePointList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/GetChargePointListUpdates" name="GetChargePointListUpdates" bindingOperationName="GetChargePointListUpdates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListUpdatesRequest>
         <ns:lastUpdate>
            <ns:DateTime>?</ns:DateTime>
         </ns:lastUpdate>
      </ns:GetChargePointListUpdatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetChargePointListUpdates"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/GetRoamingAuthorisationList" name="GetRoamingAuthorisationList" bindingOperationName="GetRoamingAuthorisationList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1" outgoingWss="echs-q"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" 
 xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetRoamingAuthorisationListRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request>&lt;soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   &lt;soap:Body>
      &lt;GetRoamingAuthorisationListRequest xmlns="http://ochp.eu/1.2"/>
   &lt;/soap:Body>
&lt;/soap:Envelope></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 3" outgoingWss="echs-q"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">

   &lt;soap:Body>
      &lt;GetRoamingAuthorisationListRequest xmlns="http://ochp.eu/1.2"/>
   &lt;/soap:Body>
&lt;/soap:Envelope></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates" name="GetRoamingAuthorisationListUpdates" bindingOperationName="GetRoamingAuthorisationListUpdates" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetRoamingAuthorisationListUpdatesRequest>
         <ns:lastUpdate>
            <ns:DateTime>?</ns:DateTime>
         </ns:lastUpdate>
      </ns:GetRoamingAuthorisationListUpdatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation" name="RequestLiveRoamingAuthorisation" bindingOperationName="RequestLiveRoamingAuthorisation" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:RequestLiveRoamingAuthorisationRequest>
         <ns:emtId representation="sha-160">
            <ns:instance>?</ns:instance>
            <ns:tokenType>?</ns:tokenType>
            <!--Optional:-->
            <ns:tokenSubType>?</ns:tokenSubType>
         </ns:emtId>
         <ns:evseId>?</ns:evseId>
      </ns:RequestLiveRoamingAuthorisationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/SetChargepointList" name="SetChargepointList" bindingOperationName="SetChargepointList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-b6a75cf0-8132-455b-bb40-3d1e6fa09f12">
            <wsse:Username>backend.tnm</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">Malt3Z3r?</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <soap:Body>
      <SetChargePointListRequest xmlns="http://ochp.eu/1.2">
         <chargepointInfoArray>
            <evseId>DE*823*E1234*5678</evseId>
            <locationId>Wereld</locationId>
            <locationName/>
            <locationNameLang>NL</locationNameLang>
            <address>Keizersgracht 585</address>
            <city>Amsterdam</city>
            <zipCode>1017DR</zipCode>
            <country>NL</country>
            <geoLocation>
               <lat>52.36420822143555</lat>
               <lon>4.891792297363281</lon>
            </geoLocation>
            <operatingTimes>
               <regularHours>
                  <weekday>1</weekday>
                  <periodBegin>08:00</periodBegin>
                  <periodEnd>18:00</periodEnd>
               </regularHours>
            </operatingTimes>
            <accessTimes/>
            <authMethods>
               <AuthMethodType>RfidMifareCls</AuthMethodType>
            </authMethods>
            <connectors>
               <connectorStandard>
                  <ConnectorStandard>TESLA-R</ConnectorStandard>
               </connectorStandard>
               <connectorFormat>
                  <ConnectorFormat>Socket</ConnectorFormat>
               </connectorFormat>
            </connectors>
         </chargepointInfoArray>
      </SetChargePointListRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetChargepointList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/SetRoamingAuthorisationList" name="SetRoamingAuthorisationList" bindingOperationName="SetRoamingAuthorisationList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetRoamingAuthorisationListRequest>
         <!--1 or more repetitions:-->
         <ns:roamingAuthorisationInfoArray>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfoArray>
      </ns:SetRoamingAuthorisationListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call><con:call name="specs2_send_roamingAuthorisationList"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
      <wsse:Security soap:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-c44ceff1-73d8-4a5c-b366-aadecc8dc870">
            <wsse:Username>backend.tnm</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText">Malt3Z3r?</wsse:Password>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <soap:Body>
      <SetRoamingAuthorisationListRequest xmlns="http://ochp.eu/1.2">
         <roamingAuthorisationInfoArray>
            <EmtId>
               <instance>96B0149B4EA098BE769EFDE5BD6A7403F3A25BA0</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000003</contractId>
            <expiryDate>
               <DateTime>2014-07-14T02:00:00.000+02:00</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
      </SetRoamingAuthorisationListRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/UpdateChargePointList" name="UpdateChargePointList" bindingOperationName="UpdateChargePointList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateChargePointListRequest>
         <!--1 or more repetitions:-->
         <ns:chargePointInfoArray>
            <ns:evseId>?</ns:evseId>
            <ns:locationId>?</ns:locationId>
            <!--Optional:-->
            <ns:timestamp>
               <ns:DateTime>?</ns:DateTime>
            </ns:timestamp>
            <ns:locationName>?</ns:locationName>
            <ns:locationNameLang>?</ns:locationNameLang>
            <!--Zero or more repetitions:-->
            <ns:images>
               <ns:uri>?</ns:uri>
               <!--Optional:-->
               <ns:thumbUri>?</ns:thumbUri>
               <ns:class>?</ns:class>
               <ns:type>?</ns:type>
               <!--Optional:-->
               <ns:width>?</ns:width>
               <!--Optional:-->
               <ns:height>?</ns:height>
            </ns:images>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <ns:address>?</ns:address>
            <ns:city>?</ns:city>
            <ns:zipCode>?</ns:zipCode>
            <ns:country>?</ns:country>
            <ns:geoLocation>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoLocation>
            <!--Optional:-->
            <ns:geoUserInterface>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoUserInterface>
            <!--Zero or more repetitions:-->
            <ns:geoSiteEntrance>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteEntrance>
            <!--Zero or more repetitions:-->
            <ns:geoSiteExit>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteExit>
            <!--Optional:-->
            <ns:operatingTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:operatingTimes>
            <!--Optional:-->
            <ns:accessTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:accessTimes>
            <!--Optional:-->
            <ns:status>
               <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
            </ns:status>
            <!--Zero or more repetitions:-->
            <ns:statusSchedule>
               <ns:startDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:startDate>
               <!--Optional:-->
               <ns:endDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:endDate>
               <ns:status>
                  <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
               </ns:status>
            </ns:statusSchedule>
            <!--Optional:-->
            <ns:telephoneNumber>?</ns:telephoneNumber>
            <!--Optional:-->
            <ns:floorLevel>?</ns:floorLevel>
            <!--Optional:-->
            <ns:parkingSlotNumber>?</ns:parkingSlotNumber>
            <!--Zero or more repetitions:-->
            <ns:parkingRestriction>
               <ns:ParkingRestrictionType>?</ns:ParkingRestrictionType>
            </ns:parkingRestriction>
            <!--1 or more repetitions:-->
            <ns:authMethods>
               <ns:AuthMethodType>?</ns:AuthMethodType>
            </ns:authMethods>
            <!--1 or more repetitions:-->
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
            <!--Zero or more repetitions:-->
            <ns:userInterfaceLang>?</ns:userInterfaceLang>
         </ns:chargePointInfoArray>
      </ns:UpdateChargePointListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateChargePointList"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://ochp.eu/1.2/UpdateRoamingAuthorisationList" name="UpdateRoamingAuthorisationList" bindingOperationName="UpdateRoamingAuthorisationList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088/mockeCHS-OCHP_1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateRoamingAuthorisationListRequest>
         <!--1 or more repetitions:-->
         <ns:roamingAuthorisationInfoArray>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfoArray>
      </ns:UpdateRoamingAuthorisationListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="eCHS-OCHP_1.2-live TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetStatus TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2-live</con:interface><con:operation>GetStatus</con:operation><con:request name="GetStatus"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/live/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetStatusRequest>
         <!--Optional:-->
         <ns:startDateTime>
            <ns:DateTime>?</ns:DateTime>
         </ns:startDateTime>
      </ns:GetStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.e-clearing.net/service/GetStatus"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateStatus TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="UpdateStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2-live</con:interface><con:operation>UpdateStatus</con:operation><con:request name="UpdateStatus"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/live/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateStatusRequest>
         <!--Zero or more repetitions:-->
         <ns:evse major="?" minor="?" ttl="?">
            <ns:evseId>?</ns:evseId>
         </ns:evse>
         <!--Optional:-->
         <ns:ttl>
            <ns:DateTime>?</ns:DateTime>
         </ns:ttl>
      </ns:UpdateStatusRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.e-clearing.net/service/UpdateStatus"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="eCHS-OCHP_1.2 TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AddCDRs TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="AddCDRs"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>AddCDRs</con:operation><con:request name="AddCDRs"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:AddCDRsRequest>
         <!--1 or more repetitions:-->
         <ns:cdrInfoArray>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:cdrInfoArray>
      </ns:AddCDRsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/AddCDRs"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ConfirmCDRs TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="ConfirmCDRs"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>ConfirmCDRs</con:operation><con:request name="ConfirmCDRs"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ConfirmCDRsRequest>
         <!--Zero or more repetitions:-->
         <ns:approved>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:approved>
         <!--Zero or more repetitions:-->
         <ns:declined>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:declined>
      </ns:ConfirmCDRsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/ConfirmCDRs"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetCDRs TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetCDRs"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>GetCDRs</con:operation><con:request name="GetCDRs"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetCDRsRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/GetCDRs"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetChargePointList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetChargePointList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>GetChargePointList</con:operation><con:request name="GetChargePointList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/GetChargePointList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetChargePointListUpdates TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetChargePointListUpdates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>GetChargePointListUpdates</con:operation><con:request name="GetChargePointListUpdates"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListUpdatesRequest>
         <ns:lastUpdate>
            <ns:DateTime>?</ns:DateTime>
         </ns:lastUpdate>
      </ns:GetChargePointListUpdatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/GetChargePointListUpdates"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRoamingAuthorisationList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetRoamingAuthorisationList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>GetRoamingAuthorisationList</con:operation><con:request name="GetRoamingAuthorisationList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetRoamingAuthorisationListRequest/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRoamingAuthorisationListUpdates TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="GetRoamingAuthorisationListUpdates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>GetRoamingAuthorisationListUpdates</con:operation><con:request name="GetRoamingAuthorisationListUpdates"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetRoamingAuthorisationListUpdatesRequest>
         <ns:lastUpdate>
            <ns:DateTime>?</ns:DateTime>
         </ns:lastUpdate>
      </ns:GetRoamingAuthorisationListUpdatesRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RequestLiveRoamingAuthorisation TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="RequestLiveRoamingAuthorisation"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>RequestLiveRoamingAuthorisation</con:operation><con:request name="RequestLiveRoamingAuthorisation"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:RequestLiveRoamingAuthorisationRequest>
         <ns:emtId representation="sha-160">
            <ns:instance>?</ns:instance>
            <ns:tokenType>?</ns:tokenType>
            <!--Optional:-->
            <ns:tokenSubType>?</ns:tokenSubType>
         </ns:emtId>
         <ns:evseId>?</ns:evseId>
      </ns:RequestLiveRoamingAuthorisationRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetChargepointList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="SetChargepointList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>SetChargepointList</con:operation><con:request name="SetChargepointList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetChargePointListRequest>
         <!--1 or more repetitions:-->
         <ns:chargepointInfoArray>
            <ns:evseId>?</ns:evseId>
            <ns:locationId>?</ns:locationId>
            <!--Optional:-->
            <ns:timestamp>
               <ns:DateTime>?</ns:DateTime>
            </ns:timestamp>
            <ns:locationName>?</ns:locationName>
            <ns:locationNameLang>?</ns:locationNameLang>
            <!--Zero or more repetitions:-->
            <ns:images>
               <ns:uri>?</ns:uri>
               <!--Optional:-->
               <ns:thumbUri>?</ns:thumbUri>
               <ns:class>?</ns:class>
               <ns:type>?</ns:type>
               <!--Optional:-->
               <ns:width>?</ns:width>
               <!--Optional:-->
               <ns:height>?</ns:height>
            </ns:images>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <ns:address>?</ns:address>
            <ns:city>?</ns:city>
            <ns:zipCode>?</ns:zipCode>
            <ns:country>?</ns:country>
            <ns:geoLocation>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoLocation>
            <!--Optional:-->
            <ns:geoUserInterface>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoUserInterface>
            <!--Zero or more repetitions:-->
            <ns:geoSiteEntrance>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteEntrance>
            <!--Zero or more repetitions:-->
            <ns:geoSiteExit>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteExit>
            <!--Optional:-->
            <ns:operatingTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:operatingTimes>
            <!--Optional:-->
            <ns:accessTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:accessTimes>
            <!--Optional:-->
            <ns:status>
               <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
            </ns:status>
            <!--Zero or more repetitions:-->
            <ns:statusSchedule>
               <ns:startDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:startDate>
               <!--Optional:-->
               <ns:endDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:endDate>
               <ns:status>
                  <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
               </ns:status>
            </ns:statusSchedule>
            <!--Optional:-->
            <ns:telephoneNumber>?</ns:telephoneNumber>
            <!--Optional:-->
            <ns:floorLevel>?</ns:floorLevel>
            <!--Optional:-->
            <ns:parkingSlotNumber>?</ns:parkingSlotNumber>
            <!--Zero or more repetitions:-->
            <ns:parkingRestriction>
               <ns:ParkingRestrictionType>?</ns:ParkingRestrictionType>
            </ns:parkingRestriction>
            <!--1 or more repetitions:-->
            <ns:authMethods>
               <ns:AuthMethodType>?</ns:AuthMethodType>
            </ns:authMethods>
            <!--1 or more repetitions:-->
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
            <!--Zero or more repetitions:-->
            <ns:userInterfaceLang>?</ns:userInterfaceLang>
         </ns:chargepointInfoArray>
      </ns:SetChargePointListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/SetChargepointList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetRoamingAuthorisationList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="SetRoamingAuthorisationList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>SetRoamingAuthorisationList</con:operation><con:request name="SetRoamingAuthorisationList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetRoamingAuthorisationListRequest>
         <!--1 or more repetitions:-->
         <ns:roamingAuthorisationInfoArray>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfoArray>
      </ns:SetRoamingAuthorisationListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateChargePointList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="UpdateChargePointList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>UpdateChargePointList</con:operation><con:request name="UpdateChargePointList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateChargePointListRequest>
         <!--1 or more repetitions:-->
         <ns:chargePointInfoArray>
            <ns:evseId>?</ns:evseId>
            <ns:locationId>?</ns:locationId>
            <!--Optional:-->
            <ns:timestamp>
               <ns:DateTime>?</ns:DateTime>
            </ns:timestamp>
            <ns:locationName>?</ns:locationName>
            <ns:locationNameLang>?</ns:locationNameLang>
            <!--Zero or more repetitions:-->
            <ns:images>
               <ns:uri>?</ns:uri>
               <!--Optional:-->
               <ns:thumbUri>?</ns:thumbUri>
               <ns:class>?</ns:class>
               <ns:type>?</ns:type>
               <!--Optional:-->
               <ns:width>?</ns:width>
               <!--Optional:-->
               <ns:height>?</ns:height>
            </ns:images>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <ns:address>?</ns:address>
            <ns:city>?</ns:city>
            <ns:zipCode>?</ns:zipCode>
            <ns:country>?</ns:country>
            <ns:geoLocation>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoLocation>
            <!--Optional:-->
            <ns:geoUserInterface>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoUserInterface>
            <!--Zero or more repetitions:-->
            <ns:geoSiteEntrance>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteEntrance>
            <!--Zero or more repetitions:-->
            <ns:geoSiteExit>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteExit>
            <!--Optional:-->
            <ns:operatingTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:operatingTimes>
            <!--Optional:-->
            <ns:accessTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:accessTimes>
            <!--Optional:-->
            <ns:status>
               <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
            </ns:status>
            <!--Zero or more repetitions:-->
            <ns:statusSchedule>
               <ns:startDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:startDate>
               <!--Optional:-->
               <ns:endDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:endDate>
               <ns:status>
                  <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
               </ns:status>
            </ns:statusSchedule>
            <!--Optional:-->
            <ns:telephoneNumber>?</ns:telephoneNumber>
            <!--Optional:-->
            <ns:floorLevel>?</ns:floorLevel>
            <!--Optional:-->
            <ns:parkingSlotNumber>?</ns:parkingSlotNumber>
            <!--Zero or more repetitions:-->
            <ns:parkingRestriction>
               <ns:ParkingRestrictionType>?</ns:ParkingRestrictionType>
            </ns:parkingRestriction>
            <!--1 or more repetitions:-->
            <ns:authMethods>
               <ns:AuthMethodType>?</ns:AuthMethodType>
            </ns:authMethods>
            <!--1 or more repetitions:-->
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
            <!--Zero or more repetitions:-->
            <ns:userInterfaceLang>?</ns:userInterfaceLang>
         </ns:chargePointInfoArray>
      </ns:UpdateChargePointListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/UpdateChargePointList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UpdateRoamingAuthorisationList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="UpdateRoamingAuthorisationList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>eCHS-OCHP_1.2</con:interface><con:operation>UpdateRoamingAuthorisationList</con:operation><con:request name="UpdateRoamingAuthorisationList"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://echs-q.e-clearing.net/service/ochp/v1.2</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateRoamingAuthorisationListRequest>
         <!--1 or more repetitions:-->
         <ns:roamingAuthorisationInfoArray>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfoArray>
      </ns:UpdateRoamingAuthorisationListRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService port="8088" path="/mockeCHS-OCHP_1.2" host="localhost" name="eCHS-OCHP_1.2 MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>log.info("request headers are: "+mockRequest.getRequestHeaders())
log.info("request is: "+mockRequest.getRequestContent())</con:onRequestScript><con:mockOperation name="AddCDRs" interface="eCHS-OCHP_1.2" operation="AddCDRs"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def cdrId = req.Body.AddCDRsRequest.cdrInfoArray[0].CdrId
log.info("cdrId: " + cdrId)

if (cdrId == "123456someId123456")
 return "ok"</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:AddCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:implausibleCdrsArray>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:implausibleCdrsArray>
      </ns:AddCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/AddCDRs"/></con:response><con:response name="ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:AddCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:AddCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/AddCDRs"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="ConfirmCDRs" interface="eCHS-OCHP_1.2" operation="ConfirmCDRs"><con:settings/><con:defaultResponse>ok</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def cdrId = req.Body.ConfirmCDRsRequest.approved[0].CdrId
def cdrId2 = req.Body.ConfirmCDRsRequest.approved[0].CdrId
log.info("cdrId: " + cdrId)

if (cdrId == "123456someId123456" &amp;&amp; cdrId2 == "123456someId123457")
 return "ok"</con:dispatchPath><con:response name="ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ConfirmCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:ConfirmCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/ConfirmCDRs"/></con:response><con:response name="nok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:ConfirmCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>nok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:ConfirmCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/ConfirmCDRs"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="GetCDRs" interface="eCHS-OCHP_1.2" operation="GetCDRs"><con:settings/><con:defaultResponse>ok</con:defaultResponse><con:dispatchStyle>QUERY_MATCH</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:cdrInfoArray>
            <ns:CdrId>?</ns:CdrId>
            <ns:evseId>?</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>?</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>?</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>?</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>?</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <!--Optional:-->
            <ns:address>?</ns:address>
            <!--Optional:-->
            <ns:zipCode>?</ns:zipCode>
            <!--Optional:-->
            <ns:city>?</ns:city>
            <ns:country>?</ns:country>
            <ns:chargePointType>?</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>?</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>?</ns:productType>
            <!--Optional:-->
            <ns:meterId>?</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>?</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>?</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>?</ns:billingValue>
               <ns:currency>?</ns:currency>
               <ns:itemPrice>?</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>?</ns:periodCost>
            </ns:chargingPeriods>
         </ns:cdrInfoArray>
      </ns:GetCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetCDRs"/></con:response><con:response name="ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetCDRsResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:cdrInfoArray>
            <ns:CdrId>123456someId123456</ns:CdrId>
            <ns:evseId>FR*A23*E45B*78C</ns:evseId>
            <ns:emtId representation="sha-160">
               <ns:instance>96B0149B4EA098BE769EFDE5BD6A7403F3A25BA0</ns:instance>
               <ns:tokenType>rfid</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>mifareCls</ns:tokenSubType>
            </ns:emtId>
            <ns:contractId>DE-LND-C00001516-E</ns:contractId>
            <!--Optional:-->
            <ns:liveAuthId>wtf</ns:liveAuthId>
            <ns:status>
               <ns:CdrStatusType>new</ns:CdrStatusType>
            </ns:status>
            <ns:startDateTime>
               <ns:LocalDateTime>2014-08-08T10:10:10+01:00</ns:LocalDateTime>
            </ns:startDateTime>
            <ns:endDateTime>
               <ns:LocalDateTime>2014-08-08T18:10:10+01:00</ns:LocalDateTime>
            </ns:endDateTime>
            <!--Optional:-->
            <ns:duration>200</ns:duration>
            <!--Optional:-->
            <ns:houseNumber>585</ns:houseNumber>
            <!--Optional:-->
            <ns:address>Keizersgracht</ns:address>
            <!--Optional:-->
            <ns:zipCode>1017DR</ns:zipCode>
            <!--Optional:-->
            <ns:city>Amsterdam</ns:city>
            <ns:country>NL</ns:country>
            <ns:chargePointType>DC</ns:chargePointType>
            <ns:connectorType>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>TESLA-R</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>Socket</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectorType>
            <ns:maxSocketPower>16</ns:maxSocketPower>
            <!--Optional:-->
            <ns:productType>wtf</ns:productType>
            <!--Optional:-->
            <ns:meterId>1234</ns:meterId>
            <!--1 or more repetitions:-->
            <ns:chargingPeriods>
               <ns:startDateTime>
                  <ns:LocalDateTime>2014-08-08T10:10:10+01:00</ns:LocalDateTime>
               </ns:startDateTime>
               <ns:endDateTime>
                  <ns:LocalDateTime>2014-08-08T18:10:10+01:00</ns:LocalDateTime>
               </ns:endDateTime>
               <ns:billingItem>
                  <ns:BillingItemType>power</ns:BillingItemType>
               </ns:billingItem>
               <ns:billingValue>1</ns:billingValue>
               <ns:currency>EUR</ns:currency>
               <ns:itemPrice>6</ns:itemPrice>
               <!--Optional:-->
               <ns:periodCost>5</ns:periodCost>
            </ns:chargingPeriods>
         </ns:cdrInfoArray>
      </ns:GetCDRsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetCDRs"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="GetChargePointList" interface="eCHS-OCHP_1.2" operation="GetChargePointList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
           <ns:chargePointInfoArray>
            <ns:evseId>DE*823*E1234*5678</ns:evseId>
            <ns:locationId>Wereld</ns:locationId>
            <ns:locationName/>
            <ns:locationNameLang>NL</ns:locationNameLang>
            <ns:geoLocation>
               <ns:lat>52.36420822143555</ns:lat>
               <ns:lon>4.891792297363281</ns:lon>
            </ns:geoLocation>
            <ns:operatingTimes>
               <ns:regularHours>
                  <ns:weekday>1</ns:weekday>
                  <ns:periodBegin>08:00</ns:periodBegin>
                  <ns:periodEnd>18:00</ns:periodEnd>
               </ns:regularHours>
            </ns:operatingTimes>
            <ns:accessTimes/>
            <ns:authMethods>
               <ns:AuthMethodType>RfidMifareCls</ns:AuthMethodType>
            </ns:authMethods>
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>TESLA-R</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>Socket</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
         </ns:chargePointInfoArray>            
      </ns:GetChargePointListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetChargePointList"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="GetChargePointListUpdates" interface="eCHS-OCHP_1.2" operation="GetChargePointListUpdates"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetChargePointListUpdatesResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
            <ns:chargePointInfoArray>
            <ns:evseId>DE*823*E1234*7890</ns:evseId>
            <ns:locationId>Wereld</ns:locationId>
            <ns:locationName/>
            <ns:locationNameLang>NL</ns:locationNameLang>
            <ns:geoLocation>
               <ns:lat>52.36420822143555</ns:lat>
               <ns:lon>4.891792297363281</ns:lon>
            </ns:geoLocation>
            <ns:operatingTimes>
               <ns:regularHours>
                  <ns:weekday>1</ns:weekday>
                  <ns:periodBegin>08:00</ns:periodBegin>
                  <ns:periodEnd>18:00</ns:periodEnd>
               </ns:regularHours>
            </ns:operatingTimes>
            <ns:accessTimes/>
            <ns:authMethods>
               <ns:AuthMethodType>RfidMifareCls</ns:AuthMethodType>
            </ns:authMethods>
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>TESLA-R</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>Socket</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
         </ns:chargePointInfoArray>
      </ns:GetChargePointListUpdatesResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetChargePointListUpdates"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="GetRoamingAuthorisationList" interface="eCHS-OCHP_1.2" operation="GetRoamingAuthorisationList"><con:settings/><con:defaultResponse>echs-q response 1</con:defaultResponse><con:dispatchStyle>QUERY_MATCH</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:GetRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:roamingAuthorisationInfoArray>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfoArray>
      </ns:GetRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/></con:response><con:response name="echs-q response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <GetRoamingAuthorisationListResponse xmlns="http://ochp.eu/1.2">
         <result>
            <resultCode>
               <resultCode>ok</resultCode>
            </resultCode>
            <resultDescription>Data accepted and processed.</resultDescription>
         </result>
         <roamingAuthorisationInfoArray>
            <EmtId representation="sha-160">
               <instance>96B0149B4EA098BE769EFDE5BD6A7403F3A25BA0</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000003</contractId>
            <printedNumber>YYABCC00000003J</printedNumber>
            <expiryDate>
               <DateTime>2014-07-14T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>969D4A200B4AEF</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000004</contractId>
            <printedNumber>YYABCC00000004</printedNumber>
            <expiryDate>
               <DateTime>2014-09-01T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="sha-160">
               <instance>2381FBAC836B7CDB0935909F2B7D762C07A52511B41</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000005</contractId>
            <printedNumber>YYABCC00000005</printedNumber>
            <expiryDate>
               <DateTime>2014-09-01T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04197DF2293181</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000002</contractId>
            <printedNumber>YYABCC00000002Q</printedNumber>
            <expiryDate>
               <DateTime>2014-08-01T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="plain">
               <instance>04E57EF2293180</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000003</contractId>
            <printedNumber>YYABCC00000003J</printedNumber>
            <expiryDate>
               <DateTime>2014-08-01T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="sha-160">
               <instance>534B7B27939F5C96365B77C75EBEE6F847FAC4F2</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000001</contractId>
            <printedNumber>YYABCC00000001K</printedNumber>
            <expiryDate>
               <DateTime>2014-07-14T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
         <roamingAuthorisationInfoArray>
            <EmtId representation="sha-160">
               <instance>7531D54C76187294F4F351164E2092BA3BBA50FB</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000002</contractId>
            <printedNumber>YYABCC00000002Q</printedNumber>
            <expiryDate>
               <DateTime>2014-07-14T00:00:00Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfoArray>
      </GetRoamingAuthorisationListResponse>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationList"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="GetRoamingAuthorisationListUpdates" interface="eCHS-OCHP_1.2" operation="GetRoamingAuthorisationListUpdates"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <GetRoamingAuthorisationListUpdatesResponse xmlns="http://ochp.eu/1.2">
         <result>
            <resultCode>
               <resultCode>ok</resultCode>
            </resultCode>
            <resultDescription>Data accepted and processed.</resultDescription>
         </result>
         <roamingAuthorisationInfo>
            <EmtId representation="plain">
               <instance>04917CF2293180</instance>
               <tokenType>rfid</tokenType>
               <tokenSubType>mifareCls</tokenSubType>
            </EmtId>
            <contractId>YYABCC00000001</contractId>
            <printedNumber>YYABCC00000001K</printedNumber>
            <expiryDate>
               <DateTime>2014-08-20T15:23:32Z</DateTime>
            </expiryDate>
         </roamingAuthorisationInfo>
      </GetRoamingAuthorisationListUpdatesResponse>
   </soap:Body>
</soap:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/GetRoamingAuthorisationListUpdates"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="RequestLiveRoamingAuthorisation" interface="eCHS-OCHP_1.2" operation="RequestLiveRoamingAuthorisation"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:RequestLiveRoamingAuthorisationResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Optional:-->
         <ns:roamingAuthorisationInfo>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:roamingAuthorisationInfo>
         <!--Optional:-->
         <ns:liveAuthId>?</ns:liveAuthId>
      </ns:RequestLiveRoamingAuthorisationResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/RequestLiveRoamingAuthorisation"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="SetChargepointList" interface="eCHS-OCHP_1.2" operation="SetChargepointList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def evseid = req.Body.SetChargePointListRequest.chargepointInfoArray[0].evseId
log.info("evseid: " + evseid)

if (evseid == "DE*823*E1234*5678")
 return "ok"
else
 return "Response 1"</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetChargePointListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:refusedChargePointInfo>
            <ns:evseId>?</ns:evseId>
            <ns:locationId>?</ns:locationId>
            <!--Optional:-->
            <ns:timestamp>
               <ns:DateTime>?</ns:DateTime>
            </ns:timestamp>
            <ns:locationName>?</ns:locationName>
            <ns:locationNameLang>?</ns:locationNameLang>
            <!--Zero or more repetitions:-->
            <ns:images>
               <ns:uri>?</ns:uri>
               <!--Optional:-->
               <ns:thumbUri>?</ns:thumbUri>
               <ns:class>?</ns:class>
               <ns:type>?</ns:type>
               <!--Optional:-->
               <ns:width>?</ns:width>
               <!--Optional:-->
               <ns:height>?</ns:height>
            </ns:images>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <ns:address>?</ns:address>
            <ns:city>?</ns:city>
            <ns:zipCode>?</ns:zipCode>
            <ns:country>?</ns:country>
            <ns:geoLocation>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoLocation>
            <!--Optional:-->
            <ns:geoUserInterface>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoUserInterface>
            <!--Zero or more repetitions:-->
            <ns:geoSiteEntrance>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteEntrance>
            <!--Zero or more repetitions:-->
            <ns:geoSiteExit>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteExit>
            <!--Optional:-->
            <ns:operatingTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:operatingTimes>
            <!--Optional:-->
            <ns:accessTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:accessTimes>
            <!--Optional:-->
            <ns:status>
               <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
            </ns:status>
            <!--Zero or more repetitions:-->
            <ns:statusSchedule>
               <ns:startDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:startDate>
               <!--Optional:-->
               <ns:endDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:endDate>
               <ns:status>
                  <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
               </ns:status>
            </ns:statusSchedule>
            <!--Optional:-->
            <ns:telephoneNumber>?</ns:telephoneNumber>
            <!--Optional:-->
            <ns:floorLevel>?</ns:floorLevel>
            <!--Optional:-->
            <ns:parkingSlotNumber>?</ns:parkingSlotNumber>
            <!--Zero or more repetitions:-->
            <ns:parkingRestriction>
               <ns:ParkingRestrictionType>?</ns:ParkingRestrictionType>
            </ns:parkingRestriction>
            <!--1 or more repetitions:-->
            <ns:authMethods>
               <ns:AuthMethodType>?</ns:AuthMethodType>
            </ns:authMethods>
            <!--1 or more repetitions:-->
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
            <!--Zero or more repetitions:-->
            <ns:userInterfaceLang>?</ns:userInterfaceLang>
         </ns:refusedChargePointInfo>
      </ns:SetChargePointListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetChargepointList"/></con:response><con:response name="ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetChargePointListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:SetChargePointListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetChargepointList"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="SetRoamingAuthorisationList" interface="eCHS-OCHP_1.2" operation="SetRoamingAuthorisationList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def emtId = req.Body.SetRoamingAuthorisationListRequest.roamingAuthorisationInfoArray[0].EmtId.instance
log.info("emtid: " + emtId)

if (emtId == "96B0149B4EA098BE769EFDE5BD6A7403F3A25BA0")
 return "specs2_send_roamingAuthorisationList_ok"
else if (emtId == "96B0149B4EA098BE769EFDE5BD6A7403F3A25BA1")
 return "specs2_send_roamingAuthorisationList_nok"
else
 return "Response 1"</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:refusedRoamingAuthorisationInfo>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>?</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>?</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>?</ns:DateTime>
            </ns:expiryDate>
         </ns:refusedRoamingAuthorisationInfo>
      </ns:SetRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/></con:response><con:response name="specs2_send_roamingAuthorisationList_ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:SetRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/></con:response><con:response name="specs2_send_roamingAuthorisationList_nok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:SetRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>nok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data wrong.</ns:resultDescription>
         </ns:result>
         <ns:refusedRoamingAuthorisationInfo>
            <ns:EmtId representation="sha-160">
               <ns:instance>?</ns:instance>
               <ns:tokenType>rfid</ns:tokenType>
               <!--Optional:-->
               <ns:tokenSubType>mifareCls</ns:tokenSubType>
            </ns:EmtId>
            <ns:contractId>?</ns:contractId>
            <!--Optional:-->
            <ns:printedNumber>?</ns:printedNumber>
            <ns:expiryDate>
               <ns:DateTime>2014-08-08T10:10:10+01:00</ns:DateTime>
            </ns:expiryDate>
         </ns:refusedRoamingAuthorisationInfo>
      </ns:SetRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/SetRoamingAuthorisationList"/></con:response><con:dispatchConfig xsi:type="con:MockOperationQueryMatchDispatch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:query><con:name>ok</con:name><con:query>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://ochp.eu/1.2';
declare namespace wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';
declare namespace wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd';
declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
//roamingAuthorisationInfoArray[0]/EmtId/instance</con:query><con:match>96B0149B4EA098BE769EFDE5BD6A7403F3A25BA0</con:match><con:response>specs2_send_roamingAuthorisationList_ok</con:response></con:query><con:query><con:name>nok</con:name><con:response>specs2_send_roamingAuthorisationList_nok</con:response></con:query></con:dispatchConfig></con:mockOperation><con:mockOperation name="UpdateChargePointList" interface="eCHS-OCHP_1.2" operation="UpdateChargePointList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def evseid = req.Body.UpdateChargePointListRequest.chargePointInfoArray[0].evseId
log.info("evseid: " + evseid)

if (evseid == "DE*823*E1234*5678")
 return "ok"</con:dispatchPath><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateChargePointListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>?</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>?</ns:resultDescription>
         </ns:result>
         <!--Zero or more repetitions:-->
         <ns:refusedChargePointInfo>
            <ns:evseId>?</ns:evseId>
            <ns:locationId>?</ns:locationId>
            <!--Optional:-->
            <ns:timestamp>
               <ns:DateTime>?</ns:DateTime>
            </ns:timestamp>
            <ns:locationName>?</ns:locationName>
            <ns:locationNameLang>?</ns:locationNameLang>
            <!--Zero or more repetitions:-->
            <ns:images>
               <ns:uri>?</ns:uri>
               <!--Optional:-->
               <ns:thumbUri>?</ns:thumbUri>
               <ns:class>?</ns:class>
               <ns:type>?</ns:type>
               <!--Optional:-->
               <ns:width>?</ns:width>
               <!--Optional:-->
               <ns:height>?</ns:height>
            </ns:images>
            <!--Optional:-->
            <ns:houseNumber>?</ns:houseNumber>
            <ns:address>?</ns:address>
            <ns:city>?</ns:city>
            <ns:zipCode>?</ns:zipCode>
            <ns:country>?</ns:country>
            <ns:geoLocation>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoLocation>
            <!--Optional:-->
            <ns:geoUserInterface>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoUserInterface>
            <!--Zero or more repetitions:-->
            <ns:geoSiteEntrance>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteEntrance>
            <!--Zero or more repetitions:-->
            <ns:geoSiteExit>
               <ns:lat>?</ns:lat>
               <ns:lon>?</ns:lon>
            </ns:geoSiteExit>
            <!--Optional:-->
            <ns:operatingTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:operatingTimes>
            <!--Optional:-->
            <ns:accessTimes>
               <!--Zero or more repetitions:-->
               <ns:regularHours>
                  <ns:weekday>?</ns:weekday>
                  <ns:periodBegin>?</ns:periodBegin>
                  <ns:periodEnd>?</ns:periodEnd>
               </ns:regularHours>
               <!--Zero or more repetitions:-->
               <ns:exceptionalOpenings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalOpenings>
               <!--Zero or more repetitions:-->
               <ns:exceptionalClosings>
                  <ns:periodBegin>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodBegin>
                  <ns:periodEnd>
                     <ns:DateTime>?</ns:DateTime>
                  </ns:periodEnd>
               </ns:exceptionalClosings>
            </ns:accessTimes>
            <!--Optional:-->
            <ns:status>
               <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
            </ns:status>
            <!--Zero or more repetitions:-->
            <ns:statusSchedule>
               <ns:startDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:startDate>
               <!--Optional:-->
               <ns:endDate>
                  <ns:DateTime>?</ns:DateTime>
               </ns:endDate>
               <ns:status>
                  <ns:ChargePointStatusType>?</ns:ChargePointStatusType>
               </ns:status>
            </ns:statusSchedule>
            <!--Optional:-->
            <ns:telephoneNumber>?</ns:telephoneNumber>
            <!--Optional:-->
            <ns:floorLevel>?</ns:floorLevel>
            <!--Optional:-->
            <ns:parkingSlotNumber>?</ns:parkingSlotNumber>
            <!--Zero or more repetitions:-->
            <ns:parkingRestriction>
               <ns:ParkingRestrictionType>?</ns:ParkingRestrictionType>
            </ns:parkingRestriction>
            <!--1 or more repetitions:-->
            <ns:authMethods>
               <ns:AuthMethodType>?</ns:AuthMethodType>
            </ns:authMethods>
            <!--1 or more repetitions:-->
            <ns:connectors>
               <ns:connectorStandard>
                  <ns:ConnectorStandard>?</ns:ConnectorStandard>
               </ns:connectorStandard>
               <ns:connectorFormat>
                  <ns:ConnectorFormat>?</ns:ConnectorFormat>
               </ns:connectorFormat>
            </ns:connectors>
            <!--Zero or more repetitions:-->
            <ns:userInterfaceLang>?</ns:userInterfaceLang>
         </ns:refusedChargePointInfo>
      </ns:UpdateChargePointListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateChargePointList"/></con:response><con:response name="ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateChargePointListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
    
      </ns:UpdateChargePointListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateChargePointList"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="UpdateRoamingAuthorisationList" interface="eCHS-OCHP_1.2" operation="UpdateRoamingAuthorisationList"><con:settings/><con:defaultResponse>specs2_updateRoamingAuthList_ok</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>
def req = new XmlSlurper().parseText(mockRequest.requestContent)
def emtId = req.Body.UpdateRoamingAuthorisationListRequest.roamingAuthorisationInfoArray[0].EmtId.instance
log.info("emtid: " + emtId)

if (emtId == "96B0149B4EA098BE769EFDE5BD6A7403F3A25BA1")
 return "specs2_updateRoamingAuthList_ok"
else
 return "specs2_updateRoamingAuthList_nok"</con:dispatchPath><con:response name="specs2_updateRoamingAuthList_ok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:UpdateRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/></con:response><con:response name="specs2_updateRoamingAuthList_nok" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateRoamingAuthorisationListResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>nok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:UpdateRoamingAuthorisationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.eu/1.2/UpdateRoamingAuthorisationList"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService port="8088" path="/mockeCHS-OCHP_1.2/live" host="localhost" name="eCHS-OCHP_1.2 live mockservice" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>log.info("request headers are: "+mockRequest.getRequestHeaders())
log.info("request is: "+mockRequest.getRequestContent())</con:onRequestScript><con:mockOperation name="UpdateStatus" interface="eCHS-OCHP_1.2-live" operation="UpdateStatus"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://ochp.eu/1.2">
   <soapenv:Header/>
   <soapenv:Body>
      <ns:UpdateStatusResponse>
         <ns:result>
            <ns:resultCode>
               <ns:resultCode>ok</ns:resultCode>
            </ns:resultCode>
            <ns:resultDescription>Data accepted and processed.</ns:resultDescription>
         </ns:result>
      </ns:UpdateStatusResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://ochp.e-clearing.net/service/UpdateStatus"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties/><con:wssContainer><con:outgoing><con:name>echs-q</con:name><con:username>backend.tnm</con:username><con:password>T683f2L03d</con:password><con:entry type="Username"><con:configuration><addCreated>true</addCreated><addNonce>true</addNonce><passwordType>PasswordText</passwordType></con:configuration></con:entry></con:outgoing></con:wssContainer><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>